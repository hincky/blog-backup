(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{364:function(s,t,n){"use strict";n.r(t);var a=n(14),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"nginx-ingress-version"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-ingress-version"}},[s._v("#")]),s._v(" nginx ingress version")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("nginx official version")]),s._v(" "),t("ul",[t("li",[s._v("nginx open source")]),s._v(" "),t("li",[s._v("nginx plus 功能比开源版更多")])])]),s._v(" "),t("li",[t("p",[s._v("k8s comunity version\n社区维护\n使用的时候，要注意nginx ingress和k8s的版本对应关系")])])]),s._v(" "),t("h2",{attrs:{id:"k8s中nginx-ingress的安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#k8s中nginx-ingress的安装"}},[s._v("#")]),s._v(" k8s中nginx ingress的安装")]),s._v(" "),t("blockquote",[t("p",[s._v("安装之前确保集群里没有其他ingress controller了")])]),s._v(" "),t("p",[s._v("如果有就删除对应的命名空间，会循环删除ns里面的资源。再开始下面的步骤")]),s._v(" "),t("p",[s._v("使用manifest的yaml安装方式")]),s._v(" "),t("p",[s._v("wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.1/deploy/static/provider/cloud/deploy.yaml")]),s._v(" "),t("p",[s._v("修改里面的配置   步骤1先不要做")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("注释掉externalTrafficPolicy: Local\nexternalTrafficPolicy: Local")])]),s._v(" "),t("li",[t("p",[s._v("修改controller/deploy的image\nbitnami/nginx-ingress-controller:1.1.1")])]),s._v(" "),t("li",[t("p",[s._v("修改ingress-nginx-admission-create的image\nliangjw/kube-webhook-certgen:v1.1.1")])]),s._v(" "),t("li",[t("p",[s._v("修改ingress-nginx-admission-path的image\nliangjw/kube-webhook-certgen:v1.1.1")])])]),s._v(" "),t("p",[s._v("ok之后直接apply部署即可\napply好了之后，进入controller 的pod内部")]),s._v(" "),t("p",[s._v("kubectl exec -it ingress-nginx-controller-c9db554bd-2dpfg sh -n ingress-nginx")]),s._v(" "),t("p",[s._v("ps -efwww")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("UID")]),s._v("          PID    "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PPID")]),s._v("  C STIME TTY          TIME CMD\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 04:48 ?        00:00:00 nginx-ingress-controller /nginx-ingress-controller --publish-service"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ingress-nginx/ingress-nginx-controller --election-id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ingress-controller-leader --controller-class"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("k8s.io/ingress-nginx "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--configmap")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ingress-nginx/ingress-nginx-controller --validating-webhook"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(":8443 --validating-webhook-certificate"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/certificates/cert --validating-webhook-key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/local/certificates/key\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 04:48 ?        00:00:00 nginx: master process /usr/local/nginx/sbin/nginx "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" /etc/nginx/nginx.conf\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 04:48 ?        00:00:00 nginx: worker process\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 04:48 ?        00:00:00 nginx: worker process\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 04:48 ?        00:00:00 nginx: cache manager process\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 04:59 pts/0    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("105")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" 04:59 pts/0    00:00:00 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-efwww")]),s._v("\n")])])]),t("p",[s._v("看到第一启动的进程时nginx-ingress-controller\n然后启动了master process\n再然后启动了worker process")]),s._v(" "),t("h2",{attrs:{id:"部署应用进行转发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署应用进行转发"}},[s._v("#")]),s._v(" 部署应用进行转发")]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[s._v("cat "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" deploy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("ingress.yaml << EOF\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" networking.k8s.io/v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Ingress\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ingress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("myapp\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("rules")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myapp.demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("ingress.com "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# host 只能对应域名")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("http")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("paths")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" / "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不指定的话。默认是 / 根路径")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pathType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Exact\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("backend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择对应的后端应用，这里是路由到myapp-service的service的80上面")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myapp\n            "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n              "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\nEOF\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面这个会各种报错，用上面的模板吧")]),s._v("\ncat "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" deploy"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("ingress.yaml << EOF\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" extensions/v1beta1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Ingress\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ingress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("myapp\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("annotation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kubernetes.io/ingress.class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("rules")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myapp.demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("ingress.com\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("http")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("paths")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("backend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myapp\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("servicePort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\nEOF\n")])])]),t("p",[s._v("接下来创建deploy和service")]),s._v(" "),t("p",[s._v("kubectl create deploy myapp --image=ikubernetes/myapp:v1")]),s._v(" "),t("p",[s._v("kubectl expose deploy myapp --port=80\nkubectl get po\nkubectl get svc")]),s._v(" "),t("p",[s._v("有了pod之后")]),s._v(" "),t("h2",{attrs:{id:"创建对应的ingress"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建对应的ingress"}},[s._v("#")]),s._v(" 创建对应的ingress")]),s._v(" "),t("p",[s._v("vim deploy-ingress.yaml")]),s._v(" "),t("p",[s._v("kubectl apply -f deploy-ingress.yaml")]),s._v(" "),t("p",[s._v("kubectl get svc -n ingress-nginx")])])}),[],!1,null,null,null);t.default=e.exports}}]);