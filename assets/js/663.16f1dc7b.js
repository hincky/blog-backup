(window.webpackJsonp=window.webpackJsonp||[]).push([[663],{980:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"zip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zip"}},[a._v("#")]),a._v(" zip")]),a._v(" "),s("p",[a._v("可以用来解压缩文件")]),a._v(" "),s("h2",{attrs:{id:"补充说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[a._v("#")]),a._v(" 补充说明")]),a._v(" "),s("p",[s("strong",[a._v("zip命令")]),a._v(" 可以用来解压缩文件，或者对文件进行打包操作。zip是个使用广泛的压缩程序，文件经它压缩后会另外产生具有“.zip”扩展名的压缩文件。")]),a._v(" "),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("zip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h3",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("-A：调整可执行的自动解压缩文件；\n-b"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("工作目录"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：指定暂时存放文件的目录；\n-c：替每个被压缩的文件加上注释；\n-d：从压缩文件内删除指定的文件；\n-D：压缩文件内不建立目录名称；\n-f：此参数的效果和指定“-u”参数类似，但不仅更新既有文件，如果某些文件原本不存在于压缩文件内，使用本参数会一并将其加入压缩文件中；\n-F：尝试修复已损坏的压缩文件；\n-g：将文件压缩后附加在已有的压缩文件之后，而非另行建立新的压缩文件；\n-h：在线帮助；\n-i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：只压缩符合条件的文件；\n-j：只保存文件名称及其内容，而不存放任何目录名称；\n-J：删除压缩文件前面不必要的数据；\n-k：使用MS-DOS兼容格式的文件名称；\n-l：压缩文件时，把LF字符置换成LF+CR字符；\n-ll：压缩文件时，把LF+cp字符置换成LF字符；\n-L：显示版权信息；\n-m：将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中；\n-n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("字尾字符串"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：不压缩具有特定字尾字符串的文件；\n-o：以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同；\n-q：不显示指令执行过程；\n-r：递归处理，将指定目录下的所有文件和子目录一并处理；\n-S：包含系统和隐藏文件；\n-t"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("日期时间"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：把压缩文件的日期设成指定的日期；\n-T：检查备份文件内的每个文件是否正确无误；\n-u：更换较新的文件到压缩文件内；\n-v：显示指令执行过程或显示版本信息；\n-V：保存VMS操作系统的文件属性；\n-w：在文件名称里假如版本编号，本参数仅在VMS操作系统下有效；\n-x"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：压缩时排除符合条件的文件；\n-X：不保存额外的文件属性；\n-y：直接保存符号连接，而非该链接所指向的文件，本参数仅在UNIX之类的系统下有效；\n-z：替压缩文件加上注释；\n-$：保存第一个被压缩文件所在磁盘的卷册名称；\n-"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("压缩效率"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：压缩效率是一个介于1~9的数值。\n")])])]),s("h3",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),s("ul",[s("li",[a._v("zip压缩包：指定要创建的zip压缩包；")]),a._v(" "),s("li",[a._v("文件列表：指定要压缩的文件列表。")])]),a._v(" "),s("h3",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[a._v("#")]),a._v(" 实例")]),a._v(" "),s("p",[a._v("将"),s("code",[a._v("/home/Blinux/html/")]),a._v("这个目录下所有文件和文件夹打包为当前目录下的html.zip：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" html.zip /home/Blinux/html\n")])])]),s("p",[a._v("上面的命令操作是将绝对地址的文件及文件夹进行压缩，以下给出压缩相对路径目录，比如目前在Bliux这个目录下，执行以下操作可以达到以上同样的效果：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" html.zip html\n")])])]),s("p",[a._v("比如现在我的html目录下，我操作的zip压缩命令是：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" html.zip *\n")])])]),s("p",[a._v("压缩 "),s("code",[a._v("example/basic/")]),a._v(" 目录内容到 "),s("code",[a._v("basic.zip")]),a._v(" 压缩包中 "),s("code",[a._v("-x")]),a._v(" 指定排除目录，注意没有双引号将不起作用。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" basic.zip example/basic/ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example/basic/node_modules/*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example/basic/build/*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"example/basic/coverage/*"')]),a._v("\n")])])]),s("p",[a._v("上面压缩解压出来，内容存放在 "),s("code",[a._v("example/basic/")]),a._v("， 如果想存放到根目录，进入目录进行压缩，目前没有找到一个合适的参数来解决此问题。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('cd example/basic/ && zip -r basic.zip . -x "node_modules/*" -x "build/*" -x "coverage/*"\n')])])]),s("p",[a._v("压缩效率选择:")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-9")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 1-9 faster->better")]),a._v("\n")])])]),s("p",[a._v("创建 "),s("code",[a._v("public_html")]),a._v(" 目录下忽略所有文件和文件夹，排除包括文本 "),s("code",[a._v("backup")]),a._v(" 的所有文件。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" public_html.zip public_html "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" *backup*\n")])])]),s("p",[s("code",[a._v("httpdocs")]),a._v(" 目录忽略 "),s("code",[a._v(".svn")]),a._v(" 文件或 "),s("code",[a._v("git")]),a._v(" 的文件和目录下创建所有文件的归档。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" httpdocs.zip httpdocs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" *.svn* "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" *.git*\n")])])]),s("p",[s("code",[a._v("httpdocs")]),a._v(" 目录忽略的所有文件，并与 "),s("code",[a._v(".log")]),a._v(" 结尾的目录下创建所有文件的归档。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" httpdocs.zip httpdocs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.log"')]),a._v("\n")])])]),s("h3",{attrs:{id:"问题解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题解决"}},[a._v("#")]),a._v(" 问题解决")]),a._v(" "),s("p",[a._v("CentOS7中命令找不到")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("-Bash: Unzip: Command Not Found\n")])])]),s("p",[a._v("解决方法")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("zip")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);