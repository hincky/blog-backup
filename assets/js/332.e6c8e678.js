(window.webpackJsonp=window.webpackJsonp||[]).push([[332],{645:function(s,a,t){"use strict";t.r(a);var e=t(14),l=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ldd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ldd"}},[s._v("#")]),s._v(" ldd")]),s._v(" "),a("p",[s._v("打印程序或者库文件所依赖的共享库列表")]),s._v(" "),a("h2",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[s._v("#")]),s._v(" 补充说明")]),s._v(" "),a("p",[a("strong",[s._v("ldd命令")]),s._v(" 用于打印程序或者库文件所依赖的共享库列表。")]),s._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ldd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[s._v("#")]),s._v(" 选项")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("--version：打印指令版本号；\n-v：详细信息模式，打印所有相关信息；\n-u：打印未使用的直接依赖；\n-d：执行重定位和报告任何丢失的对象；\n-r：执行数据对象和函数的重定位，并且报告任何丢失的对象和函数；\n--help：显示帮助信息。\n")])])]),a("h3",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[s._v("#")]),s._v(" 参数")]),s._v(" "),a("p",[s._v("文件：指定可执行程序或者文库。")]),s._v(" "),a("h3",{attrs:{id:"其他介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他介绍"}},[s._v("#")]),s._v(" 其他介绍")]),s._v(" "),a("p",[s._v("首先ldd不是一个可执行程序，而只是一个shell脚本")]),s._v(" "),a("p",[s._v("ldd能够显示可执行模块的dependency，其原理是通过设置一系列的环境变量，如下："),a("code",[s._v("LD_TRACE_LOADED_OBJECTS、LD_WARN、LD_BIND_NOW、LD_LIBRARY_VERSION、LD_VERBOSE")]),s._v("等。当"),a("code",[s._v("LD_TRACE_LOADED_OBJECTS")]),s._v("环境变量不为空时，任何可执行程序在运行时，它都会只显示模块的dependency，而程序并不真正执行。要不你可以在shell终端测试一下，如下：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("LD_TRACE_LOADED_OBJECTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("p",[s._v("再执行任何的程序，如ls等，看看程序的运行结果。")]),s._v(" "),a("p",[s._v("ldd显示可执行模块的dependency的工作原理，其实质是通过ld-linux.so（elf动态库的装载器）来实现的。我们知道，ld-linux.so模块会先于executable模块程序工作，并获得控制权，因此当上述的那些环境变量被设置时，ld-linux.so选择了显示可执行模块的dependency。")]),s._v(" "),a("p",[s._v("实际上可以直接执行ld-linux.so模块，如："),a("code",[s._v("/lib/ld-linux.so.2 --list program")]),s._v("（这相当于ldd program）")])])}),[],!1,null,null,null);a.default=l.exports}}]);