(window.webpackJsonp=window.webpackJsonp||[]).push([[593],{906:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"trap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trap"}},[t._v("#")]),t._v(" trap")]),t._v(" "),a("p",[t._v("捕捉信号和其他事件并执行命令。")]),t._v(" "),a("h2",{attrs:{id:"概要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[t._v("#")]),t._v(" 概要")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("trap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-lp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" signal_spec "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"主要用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要用途"}},[t._v("#")]),t._v(" 主要用途")]),t._v(" "),a("ul",[a("li",[t._v("用于指定在接收到信号后将要采取的动作。")]),t._v(" "),a("li",[t._v("脚本程序被中断时执行清理工作。")])]),t._v(" "),a("h2",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v("    打印信号名称以及信号名称对应的数字。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v("    显示与每个信号关联的trap命令。\n")])])]),a("h2",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),a("p",[t._v("arg：接收到信号时执行的命令。")]),t._v(" "),a("p",[t._v("signal_spec：信号名称或信号名称对应的数字。")]),t._v(" "),a("h2",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),a("p",[t._v("如果表达式执行结果为成功时返回0，当参数 "),a("code",[t._v("signal_spec")]),t._v(" 没有指定有效值时返回1。")]),t._v(" "),a("h2",{attrs:{id:"关于信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于信号"}},[t._v("#")]),t._v(" 关于信号")]),t._v(" "),a("p",[t._v("信号是一种进程间通信机制，它给应用程序提供一种异步的软件中断，使应用程序有机会接受其他程序活终端发送的命令(即信号)。应用程序收到信号后，有三种处理方式：忽略，默认，或捕捉。进程收到一个信号后，会检查对该信号的处理机制。如果是SIG_IGN，就忽略该信号；如果是SIG_DFT，则会采用系统默认的处理动作，通常是终止进程或忽略该信号；如果给该信号指定了一个处理函数(捕捉)，则会中断当前进程正在执行的任务，转而去执行该信号的处理函数，返回后再继续执行被中断的任务。")]),t._v(" "),a("p",[t._v("在有些情况下，我们不希望自己的shell脚本在运行时刻被中断，比如说我们写得shell脚本设为某一用户的默认shell，使这一用户进入系统后只能作某一项工作，如数据库备份， 我们可不希望用户使用 Ctrl+C 等方法进入到shell状态做我们不希望做的事情。这便用到了信号处理。")]),t._v(" "),a("p",[t._v("以下是一些你可能会遇到的常见信号：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("信号名称")]),t._v(" "),a("th",[t._v("信号数")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("SIGHUP")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("本信号在用户终端连接（正常或非正常）结束时发出，通常是在终端的控制进程结束时，通知同一session内的各个作业，这时它们与控制终端不再关联。登录Linux时，系统会分配给登录用户一个终端(Session)。在这个终端运行的所有程序，包括前台进程组和后台进程组，一般都属于这个Session。当用户退出Linux登录时，前台进程组和后台有对终端输出的进程将会收到SIGHUP信号。这个信号的默认操作为终止进程，因此前台进程组和后台有终端输出的进程就会中止。对于与终端脱离关系的守护进程，这个信号用于通知它重新读取配置文件。")])]),t._v(" "),a("tr",[a("td",[t._v("SIGINT")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("程序终止(interrupt)信号，在用户键入 Ctrl+C 时发出。")])]),t._v(" "),a("tr",[a("td",[t._v("SIGQUIT")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("和SIGINT类似，但由QUIT字符(通常是Ctrl /)来控制。进程在因收到SIGQUIT退出时会产生core文件，在这个意义上类似于一个程序错误信号。")])]),t._v(" "),a("tr",[a("td",[t._v("SIGFPE")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("在发生致命的算术运算错误时发出。不仅包括浮点运算错误，还包括溢出及除数为0等其它所有的算术错误。")])]),t._v(" "),a("tr",[a("td",[t._v("SIGKILL")]),t._v(" "),a("td",[t._v("9")]),t._v(" "),a("td",[t._v("用来立即结束程序的运行。本信号不能被阻塞，处理和忽略。")])]),t._v(" "),a("tr",[a("td",[t._v("SIGALRM")]),t._v(" "),a("td",[t._v("14")]),t._v(" "),a("td",[t._v("时钟定时信号，计算的是实际的时间或时钟时间。alarm 函数使用该信号。")])]),t._v(" "),a("tr",[a("td",[t._v("SIGTERM")]),t._v(" "),a("td",[t._v("15")]),t._v(" "),a("td",[t._v("程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和处理. 通常用来要求程序自己正常退出；kill 命令缺省产生这个信号。")])])])]),t._v(" "),a("h2",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("p",[t._v("当shell收到 "),a("code",[t._v("HUP INT PIPE QUIT TERM")]),t._v(" 这几个命令时，当前执行的程序会执行 "),a("code",[t._v("exit 1")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@pc root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("trap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exit 1"')]),t._v(" HUP INT PIPE QUIT "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("TERM")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-清理临时文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-清理临时文件"}},[t._v("#")]),t._v(" 1 清理临时文件")]),t._v(" "),a("p",[t._v("下面展示了如果有人试图从终端中止程序时，如何删除文件然后退出：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("trap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rm -f '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$WORKDIR")]),t._v("/work1 "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$WORKDIR")]),t._v('/dataout; exit"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("p",[t._v("执行shell程序，如果程序接收信号为2，那么这两个文件 （work1 和 dataout） 将被自动删除。")]),t._v(" "),a("p",[t._v("添加信号1 "),a("code",[t._v("SIGHUP")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("trap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rm '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$WORKDIR")]),t._v("/work1 "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$WORKDIR")]),t._v('/dataout; exit"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-忽略信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-忽略信号"}},[t._v("#")]),t._v(" 2 忽略信号")]),t._v(" "),a("p",[t._v("如果陷阱列出的命令是空的，指定的信号接收时，将被忽略：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("trap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("p",[t._v("忽略多个信号：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("trap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-重置陷阱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-重置陷阱"}},[t._v("#")]),t._v(" 3 重置陷阱")]),t._v(" "),a("p",[t._v("当你改变了收到信号后采取的动作，你可以省略第一个参数来重置到默认行为。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("trap")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("trap -l")]),t._v(" 等价于执行 "),a("code",[t._v("kill -l")]),t._v("。")]),t._v(" "),a("li",[t._v("发送信号请查看 "),a("code",[t._v("kill")]),t._v(" 命令。")]),t._v(" "),a("li",[t._v("该命令是bash内建命令，相关的帮助信息请查看 "),a("code",[t._v("help")]),t._v(" 命令。")]),t._v(" "),a("li",[t._v("建议您阅读以下参考资料来深入了解该命令：")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#index-trap",target:"_blank",rel:"noopener noreferrer"}},[t._v("GNU 官方手册： trap命令"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/elbort/article/details/8525599",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux Shell的信号trap功能你必须知道的细节"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2019/12/mktemp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰： Bash 脚本如何创建临时文件：mktemp 命令和 trap 命令教程"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/iEearth/article/details/52612557",target:"_blank",rel:"noopener noreferrer"}},[t._v("【Bash百宝箱】shell内建命令之trap"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);