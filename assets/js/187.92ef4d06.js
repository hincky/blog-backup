(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{500:function(t,s,e){"use strict";e.r(s);var a=e(14),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"dmidecode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dmidecode"}},[t._v("#")]),t._v(" dmidecode")]),t._v(" "),s("p",[t._v("在Linux系统下获取有关硬件方面的信息")]),t._v(" "),s("h2",{attrs:{id:"补充说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[t._v("#")]),t._v(" 补充说明")]),t._v(" "),s("p",[s("strong",[t._v("dmidecode命令")]),t._v(" 可以让你在Linux系统下获取有关硬件方面的信息。dmidecode的作用是将DMI数据库中的信息解码，以可读的文本方式显示。由于DMI信息可以人为修改，因此里面的信息不一定是系统准确的信息。dmidecode遵循SMBIOS/DMI标准，其输出的信息包括BIOS、系统、主板、处理器、内存、缓存等等。")]),t._v(" "),s("p",[t._v("DMI（Desktop Management Interface,DMI）就是帮助收集电脑系统信息的管理系统，DMI信息的收集必须在严格遵照SMBIOS规范的前提下进行。SMBIOS（System Management BIOS）是主板或系统制造者以标准格式显示产品管理信息所需遵循的统一规范。SMBIOS和DMI是由行业指导机构Desktop Management Task Force(DMTF)起草的开放性的技术标准，其中DMI设计适用于任何的平台和操作系统。")]),t._v(" "),s("p",[t._v("DMI充当了管理工具和系统层之间接口的角色。它建立了标准的可管理系统更加方便了电脑厂商和用户对系统的了解。DMI的主要组成部分是Management Information Format(MIF)数据库。这个数据库包括了所有有关电脑系统和配件的信息。通过DMI，用户可以获取序列号、电脑厂商、串口信息以及其它系统配件信息。")]),t._v(" "),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("dmidecode "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("-d："),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default:/dev/mem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("从设备文件读取信息，输出内容与不加参数标准输出相同。\n-h：显示帮助信息。\n-s：只显示指定DMI字符串的信息。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-t：只显示指定条目的信息。"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n-u：显示未解码的原始条目内容。\n--dump-bin file：将DMI数据转储到一个二进制文件中。\n--from-dump FILE：从一个二进制文件读取DMI数据。\n-V：显示版本信息。\n")])])]),s("p",[s("strong",[t._v("dmidecode参数string及type列表：")])]),t._v(" "),s("p",[t._v("（1）Valid string keywords are：")]),t._v(" "),s("ul",[s("li",[t._v("bios-vendor")]),t._v(" "),s("li",[t._v("bios-version")]),t._v(" "),s("li",[t._v("bios-release-date")]),t._v(" "),s("li",[t._v("system-manufacturer")]),t._v(" "),s("li",[t._v("system-product-name")]),t._v(" "),s("li",[t._v("system-version")]),t._v(" "),s("li",[t._v("system-serial-number")]),t._v(" "),s("li",[t._v("system-uuid")]),t._v(" "),s("li",[t._v("baseboard-manufacturer")]),t._v(" "),s("li",[t._v("baseboard-product-name")]),t._v(" "),s("li",[t._v("baseboard-version")]),t._v(" "),s("li",[t._v("baseboard-serial-number")]),t._v(" "),s("li",[t._v("baseboard-asset-tag")]),t._v(" "),s("li",[t._v("chassis-manufacturer")]),t._v(" "),s("li",[t._v("chassis-type")]),t._v(" "),s("li",[t._v("chassis-version")]),t._v(" "),s("li",[t._v("chassis-serial-number")]),t._v(" "),s("li",[t._v("chassis-asset-tag")]),t._v(" "),s("li",[t._v("processor-family")]),t._v(" "),s("li",[t._v("processor-manufacturer")]),t._v(" "),s("li",[t._v("processor-version")]),t._v(" "),s("li",[t._v("processor-frequency")])]),t._v(" "),s("p",[t._v("（2）Valid type keywords are：")]),t._v(" "),s("ul",[s("li",[t._v("bios")]),t._v(" "),s("li",[t._v("system")]),t._v(" "),s("li",[t._v("baseboard")]),t._v(" "),s("li",[t._v("chassis")]),t._v(" "),s("li",[t._v("processor")]),t._v(" "),s("li",[t._v("memory")]),t._v(" "),s("li",[t._v("Cache")]),t._v(" "),s("li",[t._v("connector")]),t._v(" "),s("li",[t._v("slot")])]),t._v(" "),s("p",[t._v("（3）type全部编码列表：")]),t._v(" "),s("ul",[s("li",[t._v("BIOS")]),t._v(" "),s("li",[t._v("System")]),t._v(" "),s("li",[t._v("Base Board")]),t._v(" "),s("li",[t._v("Chassis")]),t._v(" "),s("li",[t._v("Processor")]),t._v(" "),s("li",[t._v("Memory Controller")]),t._v(" "),s("li",[t._v("Memory Module")]),t._v(" "),s("li",[t._v("Cache")]),t._v(" "),s("li",[t._v("Port Connector")]),t._v(" "),s("li",[t._v("System Slots")]),t._v(" "),s("li",[t._v("On Board Devices")]),t._v(" "),s("li",[t._v("OEM Strings")]),t._v(" "),s("li",[t._v("System Configuration Options")]),t._v(" "),s("li",[t._v("BIOS Language")]),t._v(" "),s("li",[t._v("Group Associations")]),t._v(" "),s("li",[t._v("System Event Log")]),t._v(" "),s("li",[t._v("Physical Memory Array")]),t._v(" "),s("li",[t._v("Memory Device")]),t._v(" "),s("li",[t._v("32-bit Memory Error")]),t._v(" "),s("li",[t._v("Memory Array Mapped Address")]),t._v(" "),s("li",[t._v("Memory Device Mapped Address")]),t._v(" "),s("li",[t._v("Built-in Pointing Device")]),t._v(" "),s("li",[t._v("Portable Battery")]),t._v(" "),s("li",[t._v("System Reset")]),t._v(" "),s("li",[t._v("Hardware Security")]),t._v(" "),s("li",[t._v("System Power Controls")]),t._v(" "),s("li",[t._v("Voltage Probe")]),t._v(" "),s("li",[t._v("Cooling Device")]),t._v(" "),s("li",[t._v("Temperature Probe")]),t._v(" "),s("li",[t._v("Electrical Current Probe")]),t._v(" "),s("li",[t._v("Out-of-band Remote Access")]),t._v(" "),s("li",[t._v("Boot Integrity Services")]),t._v(" "),s("li",[t._v("System Boot")]),t._v(" "),s("li",[t._v("64-bit Memory Error")]),t._v(" "),s("li",[t._v("Management Device")]),t._v(" "),s("li",[t._v("Management Device Component")]),t._v(" "),s("li",[t._v("Management Device Threshold Data")]),t._v(" "),s("li",[t._v("Memory Channel")]),t._v(" "),s("li",[t._v("IPMI Device")]),t._v(" "),s("li",[t._v("Power Supply")]),t._v(" "),s("li",[t._v("Additional Information")]),t._v(" "),s("li",[t._v("Onboard Device")])]),t._v(" "),s("h3",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("dmidecode "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看服务器信息")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Product Name'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看服务器型号 ")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Serial Number'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看主板的序列号 ")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看主板信息")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" system-serial-number "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看系统序列号 ")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" memory "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看内存信息 ")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看OEM信息 ")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看内存条数")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查询内存信息")]),t._v("\ndmidecode "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看CPU信息")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /proc/scsi/scsi "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看服务器硬盘信息")]),t._v("\n")])])]),s("p",[t._v("不带选项执行dmidecode命令通常会输出所有的硬件信息。dmidecode命令有个很有用的选项-t，可以按指定类型输出相关信息，假如要获得处理器方面的信息，则可以执行：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dmidecode -t processor")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dmidecode 2.11")]),t._v("\nSMBIOS "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),t._v(" present.\n\nHandle 0x0001, DMI "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" bytes\nProcessor Information\n        Socket Designation: Node "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" Socket "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        Type: Central Processor\n        Family: Xeon MP\n        Manufacturer: Intel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Corporation\n        id: C2 06 02 00 FF FB EB BF\n        Signature: Type "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", Family "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(", Model "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("44")]),t._v(", Stepping "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n        Flags:\n                FPU "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Floating-point unit on-chip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                VME "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Virtual mode extension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                DE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Debugging extension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                PSE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Page size extension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                TSC "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time stamp counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                MSR "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Model specific registers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                PAE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Physical address extension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                MCE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Machine check exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                CX8 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CMPXCHG8 instruction supported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                APIC "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("On-chip APIC hardware supported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                SEP "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Fast system call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                MTRR "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Memory "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" range registers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                PGE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Page global "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                MCA "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Machine check architecture"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                CMOV "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Conditional move instruction supported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                PAT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Page attribute table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                PSE-36 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),t._v("-bit page size extension"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                CLFSH "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CLFLUSH instruction supported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                DS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Debug store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                ACPI "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ACPI supported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                MMX "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MMX technology supported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                FXSR "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FXSAVE and FXSTOR instructions supported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                SSE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Streaming SIMD extensions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                SSE2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Streaming SIMD extensions "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                ss "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Self-snoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                HTT "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Multi-threading"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                TM "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Thermal monitor supported"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                PBE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Pending "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("break")]),t._v(" enabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Version: Intel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Xeon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" CPU           E5620  @ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(".40GHz\n        Voltage: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" V\n        External Clock: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5866")]),t._v(" MHz\n        Max Speed: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4400")]),t._v(" MHz\n        Current Speed: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2400")]),t._v(" MHz\n        Status: Populated, Enabled\n        Upgrade: ZIF Socket\n        L1 Cache Handle: 0x0002\n        L2 Cache Handle: 0x0003\n        L3 Cache Handle: 0x0004\n        Serial Number: Not Specified\n        Asset Tag: Not Specified\n        Part Number: Not Specified\n        Core Count: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n        Core Enabled: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n        Thread Count: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n        Characteristics:\n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("-bit capable\n\nHandle 0x0055, DMI "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" bytes\nProcessor Information\n        Socket Designation: Node "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" Socket "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n        Type: Central Processor\n        Family: Xeon MP\n        Manufacturer: Not Specified\n        ID: 00 00 00 00 00 00 00 00\n        Signature: Type "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", Family "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", Model "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(", Stepping "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        Flags: None\n        Version: Not Specified\n        Voltage: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" V\n        External Clock: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5866")]),t._v(" MHz\n        Max Speed: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4400")]),t._v(" MHz\n        Current Speed: Unknown\n        Status: Unpopulated\n        Upgrade: ZIF Socket\n        L1 Cache Handle: Not Provided\n        L2 Cache Handle: Not Provided\n        L3 Cache Handle: Not Provided\n        Serial Number: Not Specified\n        Asset Tag: Not Specified\n        Part Number: Not Specified\n        Characteristics: None\n")])])]),s("p",[t._v("查看内存的插槽数，已经使用多少插槽。每条内存多大，已使用内存多大")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("dmidecode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-P")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-A5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Memory\\s+Device"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" Size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" Range \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Size: 2048 MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Size: 2048 MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Size: 4096 MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Size: No Module Installed")]),t._v("\n")])])]),s("p",[t._v("查看内存支持的最大内存容量")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("dmidecode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-P")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Maximum\\s+Capacity'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  Maximum Capacity: 16 GB")]),t._v("\n")])])]),s("p",[t._v("查看内存的频率")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("dmidecode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-A16")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Memory Device"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Memory Device")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Array Handle: 0x1000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Error Information Handle: Not Provided")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Total Width: 72 bits")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Data Width: 64 bits")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Size: 2048 MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Form Factor: DIMM")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Set: 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Locator: DIMM_A1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Bank Locator: Not Specified")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Type: DDR3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Type Detail: Synchronous Unbuffered (Unregistered)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Speed: 1333 MHz")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Manufacturer: 00CE000080CE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Serial Number: 4830F3E1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Asset Tag: 01093200")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Part Number: M391B5673EH1-CH9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   --")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Memory Device")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Array Handle: 0x1000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Error Information Handle: Not Provided")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Total Width: 72 bits")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Data Width: 64 bits")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Size: 2048 MB")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Form Factor: DIMM")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Set: 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Locator: DIMM_A2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Bank Locator: Not Specified")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Type: DDR3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Type Detail: Synchronous Unbuffered (Unregistered)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Speed: 1333 MHz")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Manufacturer: 00AD000080AD")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Serial Number: 1BA1F0B5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Asset Tag: 01110900")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     Part Number: HMT325U7BFR8C-H9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   --")]),t._v("\n\ndmidecode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-A16")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Memory Device"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Speed'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  Speed: 1333 MHz")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  Speed: 1333 MHz")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  Speed: 1333 MHz")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  Speed: Unknown")]),t._v("\n\n```shell\n\n\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);