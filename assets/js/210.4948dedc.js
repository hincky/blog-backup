(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{524:function(s,e,t){"use strict";t.r(e);var a=t(14),n=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"egrep"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#egrep"}},[s._v("#")]),s._v(" egrep")]),s._v(" "),e("p",[s._v("在文件内查找指定的字符串")]),s._v(" "),e("h2",{attrs:{id:"补充说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[s._v("#")]),s._v(" 补充说明")]),s._v(" "),e("p",[e("strong",[s._v("egrep命令")]),s._v(" 用于在文件内查找指定的字符串。egrep执行效果与"),e("code",[s._v("grep -E")]),s._v("相似，使用的语法及参数可参照grep指令，与grep的不同点在于解读字符串的方法。egrep是用extended regular expression语法来解读的，而grep则用basic regular expression 语法解读，extended regular expression比basic regular expression的表达更规范。")]),s._v(" "),e("h3",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("egrep"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("选项"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("查找模式"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("文件名1，文件名2，……"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),e("h3",{attrs:{id:"实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[s._v("#")]),s._v(" 实例")]),s._v(" "),e("p",[s._v('显示文件中符合条件的字符。例如，查找当前目录下所有文件中包含字符串"Linux"的文件，可以使用如下命令：')]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("egrep")]),s._v(" Linux *\n")])])]),e("p",[s._v("结果如下所示：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以下五行为 testfile 中包含Linux字符的行")]),s._v("\ntestfile:hello Linux"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\ntestfile:Linux is a "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" Unix-type operating system.\ntestfile:This is a Linux testfile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\ntestfile:Linux\ntestfile:Linux\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以下两行为testfile1中含Linux字符的行")]),s._v("\ntestfile1:helLinux"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\ntestfile1:This a Linux testfile"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以下两行为 testfile_2 中包含Linux字符的行")]),s._v("\ntestfile_2:Linux is a "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" unix-type opterating system\ntestfile_2:Linux "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])]),e("p",[s._v("过滤注释行和空白行")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("egrep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\s*(#|$)'")]),s._v(" filename\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);