(window.webpackJsonp=window.webpackJsonp||[]).push([[331],{644:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ldconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ldconfig"}},[t._v("#")]),t._v(" ldconfig")]),t._v(" "),a("p",[t._v("动态链接库管理命令")]),t._v(" "),a("h2",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[t._v("#")]),t._v(" 补充说明")]),t._v(" "),a("p",[a("strong",[t._v("ldconfig命令")]),t._v(" 的用途主要是在默认搜寻目录"),a("code",[t._v("/lib")]),t._v("和"),a("code",[t._v("/usr/lib")]),t._v("以及动态库配置文件"),a("code",[t._v("/etc/ld.so.conf")]),t._v("内所列的目录下，搜索出可共享的动态链接库（格式如lib*.so*）,进而创建出动态装入程序(ld.so)所需的连接和缓存文件。缓存文件默认为"),a("code",[t._v("/etc/ld.so.cache")]),t._v("，此文件保存已排好序的动态链接库名字列表，为了让动态链接库为系统所共享，需运行动态链接库的管理命令ldconfig，此执行程序存放在"),a("code",[t._v("/sbin")]),t._v("目录下。")]),t._v(" "),a("p",[t._v("ldconfig通常在系统启动时运行，而当用户安装了一个新的动态链接库时，就需要手工运行这个命令。")]),t._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("ldconfig "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("--verbose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-N"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-X"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-f CONF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-C CACHE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-r ROOT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("--print-cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-V"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" -?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("--"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("help"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("--usage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". \n")])])]),a("h3",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("-v或--verbose：用此选项时，ldconfig将显示正在扫描的目录及搜索到的动态链接库，还有它所创建的连接的名字。\n-n：用此选项时,ldconfig仅扫描命令行指定的目录，不扫描默认目录（/lib、/usr/lib），也不扫描配置文件/etc/ld.so.conf所列的目录。\n-N：此选项指示ldconfig不重建缓存文件（/etc/ld.so.cache），若未用-X选项，ldconfig照常更新文件的连接。\n-X：此选项指示ldconfig不更新文件的连接，若未用-N选项，则缓存文件正常更新。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" CONF：此选项指定动态链接库的配置文件为CONF，系统默认为/etc/ld.so.conf。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-C")]),t._v(" CACHE：此选项指定生成的缓存文件为CACHE，系统默认的是/etc/ld.so.cache，此文件存放已排好序的可共享的动态链接库的列表。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v(" ROOT：此选项改变应用程序的根目录为ROOT（是调用chroot函数实现的）。选择此项时，系统默认的配置文件/etc/ld.so.conf，实际对应的为ROOT/etc/ld.so.conf。如用-r /usr/zzz时，打开配置文件/etc/ld.so.conf时，实际打开的是/usr/zzz/etc/ld.so.conf文件。用此选项，可以大大增加动态链接库管理的灵活性。\n-l：通常情况下,ldconfig搜索动态链接库时将自动建立动态链接库的连接，选择此项时，将进入专家模式，需要手工设置连接，一般用户不用此项。\n-p或--print-cache：此选项指示ldconfig打印出当前缓存文件所保存的所有共享库的名字。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" FORMAT 或 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--format")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FORMAT：此选项用于指定缓存文件所使用的格式，共有三种：old"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("老格式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，new"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("新格式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("和compat（兼容格式，此为默认格式）。\n-V：此选项打印出ldconfig的版本信息，而后退出。\n-? 或 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--help")]),t._v(" 或 --usage：这三个选项作用相同，都是让ldconfig打印出其帮助信息，而后退出。\n")])])]),a("p",[a("strong",[t._v("ldconfig几个需要注意的地方：")])]),t._v(" "),a("ol",[a("li",[t._v("往"),a("code",[t._v("/lib")]),t._v("和"),a("code",[t._v("/usr/lib")]),t._v("里面加东西，是不用修改"),a("code",[t._v("/etc/ld.so.conf")]),t._v("的，但是完了之后要调一下ldconfig，不然这个library会找不到。")]),t._v(" "),a("li",[t._v("想往上面两个目录以外加东西的时候，一定要修改"),a("code",[t._v("/etc/ld.so.conf")]),t._v("，然后再调用ldconfig，不然也会找不到。")]),t._v(" "),a("li",[t._v("比如安装了一个mysql到"),a("code",[t._v("/usr/local/mysql")]),t._v("，mysql有一大堆library在"),a("code",[t._v("/usr/local/mysql/lib")]),t._v("下面，这时就需要在"),a("code",[t._v("/etc/ld.so.conf")]),t._v("下面加一行"),a("code",[t._v("/usr/local/mysql/lib")]),t._v("，保存过后ldconfig一下，新的library才能在程序运行时被找到。")]),t._v(" "),a("li",[t._v("如果想在这两个目录以外放lib，但是又不想在"),a("code",[t._v("/etc/ld.so.conf")]),t._v("中加东西（或者是没有权限加东西）。那也可以，就是export一个全局变量LD_LIBRARY_PATH，然后运行程序的时候就会去这个目录中找library。一般来讲这只是一种临时的解决方案，在没有权限或临时需要的时候使用。")]),t._v(" "),a("li",[t._v("ldconfig做的这些东西都与运行程序时有关，跟编译时一点关系都没有。编译的时候还是该加-L就得加，不要混淆了。")]),t._v(" "),a("li",[t._v("总之，就是不管做了什么关于library的变动后，最好都ldconfig一下，不然会出现一些意想不到的结果。不会花太多的时间，但是会省很多的事。")]),t._v(" "),a("li",[t._v("再有，诸如libdb-4.3.so文件头中是会含有库名相关的信息的（即含“libdb-4.3.so”，可用strings命令察看），因此仅通过修改文件名以冒充某已被识别的库（如libdb-4.8.so）是行不通的。为此可在编译库的Makefile中直接修改配置信息，指定特别的库名。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);