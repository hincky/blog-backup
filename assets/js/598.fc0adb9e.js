(window.webpackJsonp=window.webpackJsonp||[]).push([[598],{909:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ulimit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ulimit"}},[t._v("#")]),t._v(" ulimit")]),t._v(" "),s("p",[t._v("控制shell程序的资源")]),t._v(" "),s("h2",{attrs:{id:"补充说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[t._v("#")]),t._v(" 补充说明")]),t._v(" "),s("p",[s("strong",[t._v("ulimit命令")]),t._v(" 用来限制系统用户对shell资源的访问。如果不懂什么意思，下面一段内容可以帮助你理解：")]),t._v(" "),s("p",[t._v("假设有这样一种情况，当一台 Linux 主机上同时登陆了 10 个人，在系统资源无限制的情况下，这 10 个用户同时打开了 500 个文档，而假设每个文档的大小有 10M，这时系统的内存资源就会受到巨大的挑战。")]),t._v(" "),s("p",[t._v("而实际应用的环境要比这种假设复杂的多，例如在一个嵌入式开发环境中，各方面的资源都是非常紧缺的，对于开启文件描述符的数量，分配堆栈的大 小，CPU 时间，虚拟内存大小，等等，都有非常严格的要求。资源的合理限制和分配，不仅仅是保证系统可用性的必要条件，也与系统上软件运行的性能有着密不可分的联 系。这时，ulimit 可以起到很大的作用，它是一种简单并且有效的实现资源限制的方式。")]),t._v(" "),s("p",[t._v("ulimit 用于限制 shell 启动进程所占用的资源，支持以下各种类型的限制：所创建的内核文件的大小、进程数据块的大小、Shell 进程创建文件的大小、内存锁住的大小、常驻内存集的大小、打开文件描述符的数量、分配堆栈的最大大小、CPU 时间、单个用户的最大线程数、Shell 进程所能使用的最大虚拟内存。同时，它支持硬资源和软资源的限制。")]),t._v(" "),s("p",[t._v("作为临时限制，ulimit 可以作用于通过使用其命令登录的 shell 会话，在会话终止时便结束限制，并不影响于其他 shell 会话。而对于长期的固定限制，ulimit 命令语句又可以被添加到由登录 shell 读取的文件中，作用于特定的 shell 用户。")]),t._v(" "),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("ulimit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("-a：显示目前资源限制的设定；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("core文件上限"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：设定core文件的最大值，单位为区块；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("数据节区大小"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：程序数据节区的最大值，单位为KB；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-e")]),t._v(" 默认进程优先级, 值越小优先级越高\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件大小"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：shell所能建立的最大文件，单位为区块；\n-H：设定资源的硬性限制，也就是管理员所设下的限制；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("内存大小"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：指定可使用内存的上限，单位为KB；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件数目"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：指定同一时间最多可开启的文件数；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("缓冲区大小"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：指定管道缓冲区的大小，单位512字节；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("堆叠大小"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：指定堆叠的上限，单位为KB；\n-S：设定资源的弹性限制；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CPU时间"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：指定CPU使用时间的上限，单位为秒；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("程序数目"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：用户最多可开启的程序数目；\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("虚拟内存大小"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("：指定可使用的虚拟内存上限，单位为KB。\n")])])]),s("h3",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ulimit -a")]),t._v("\ncore "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" size          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blocks, -c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#core文件的最大值为100 blocks。")]),t._v("\ndata seg size           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kbytes, -d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unlimited   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进程的数据段可以任意大。")]),t._v("\nscheduling priority             "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" size               "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blocks, -f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unlimited   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#文件可以任意大。")]),t._v("\npending signals                 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98304")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最多有98304个待处理的信号。")]),t._v("\nmax locked memory       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kbytes, -l"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一个任务锁住的物理内存的最大值为32KB。")]),t._v("\nmax memory size         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kbytes, -m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unlimited   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一个任务的常驻物理内存的最大值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" files                      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一个任务最多可以同时打开1024的文件。")]),t._v("\npipe size            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("512")]),t._v(" bytes, -p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#管道的最大空间为4096字节。")]),t._v("\nPOSIX message queues     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes, -q"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("819200")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#POSIX的消息队列的最大值为819200字节。")]),t._v("\nreal-time priority              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nstack size              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kbytes, -s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10240")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进程的栈的最大值为10240字节。")]),t._v("\ncpu "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds, -t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unlimited   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进程使用的CPU时间。")]),t._v("\nmax user processes              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("98304")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#当前用户同时打开的进程（包括线程）的最大个数为98304。")]),t._v("\nvirtual memory          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kbytes, -v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unlimited   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#没有限制进程的最大地址空间。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" locks                      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" unlimited   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#所能锁住的文件的最大个数没有限制。")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);