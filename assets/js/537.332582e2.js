(window.webpackJsonp=window.webpackJsonp||[]).push([[537],{851:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[t._v("#")]),t._v(" sort")]),t._v(" "),a("p",[t._v("对文本文件中所有行进行排序。")]),t._v(" "),a("h2",{attrs:{id:"概要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[t._v("#")]),t._v(" 概要")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("FILE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". --files0-from"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("F\n")])])]),a("h2",{attrs:{id:"主要用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要用途"}},[t._v("#")]),t._v(" 主要用途")]),t._v(" "),a("ul",[a("li",[t._v("将所有输入文件的内容排序后并输出。")]),t._v(" "),a("li",[t._v("当没有文件或文件为"),a("code",[t._v("-")]),t._v("时，读取标准输入。")])]),t._v(" "),a("h2",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),a("p",[t._v("排序选项：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("-b, --ignore-leading-blanks    忽略开头的空白。\n-d, --dictionary-order         仅考虑空白、字母、数字。\n-f, --ignore-case              将小写字母作为大写字母考虑。\n-g, --general-numeric-sort     根据数字排序。\n-i, --ignore-nonprinting       排除不可打印字符。\n-M, --month-sort               按照非月份、一月、十二月的顺序排序。\n-h, --human-numeric-sort       根据存储容量排序"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("注意使用大写字母，例如：2K 1G"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n-n, --numeric-sort             根据数字排序。\n-R, --random-sort              随机排序，但分组相同的行。\n--random-source"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE           从FILE中获取随机长度的字节。\n-r, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--reverse")]),t._v("                  将结果倒序排列。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--sort")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("WORD                    根据WORD排序，其中: general-numeric 等价于 -g，human-numeric 等价于 -h，month 等价于 -M，numeric 等价于 -n，random 等价于 -R，version 等价于 -V。\n-V, --version-sort             文本中"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("版本"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("数字的自然排序。\n")])])]),a("p",[t._v("其他选项：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("--batch-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NMERGE                    一次合并最多NMERGE个输入；超过部分使用临时文件。\n-c, --check, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--check")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("diagnose-first    检查输入是否已排序，该操作不会执行排序。\n-C, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--check")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("quiet, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--check")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("silent      类似于 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" 选项，但不输出第一个未排序的行。\n--compress-program"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PROG                使用PROG压缩临时文件；使用PROG -d解压缩。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--debug")]),t._v("                                注释用于排序的行，发送可疑用法的警报到stderr。\n--files0-from"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("F                        从文件F中读取以NUL结尾的所有文件名称；如果F是 - ，那么从标准输入中读取名字。\n-k, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--key")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("KEYDEF                       通过一个key排序；KEYDEF给出位置和类型。\n-m, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--merge")]),t._v("                            合并已排序文件，之后不再排序。\n-o, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--output")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FILE                      将结果写入FILE而不是标准输出。\n-s, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--stable")]),t._v("                           通过禁用最后的比较来稳定排序。\n-S, --buffer-size"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SIZE                 使用SIZE作为内存缓存大小。\n-t, --field-separator"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("SEP              使用SEP作为列的分隔符。\n-T, --temporary-directory"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DIR          使用DIR作为临时目录，而不是 "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$TMPDIR")]),t._v(" 或 /tmp；多次使用该选项指定多个临时目录。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--parallel")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("N                           将并发运行的排序数更改为N。\n-u, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--unique")]),t._v("                           同时使用-c，严格检查排序；不同时使用-c，输出排序后去重的结果。\n-z, --zero-terminated                  设置行终止符为NUL（空），而不是换行符。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--help")]),t._v("                                 显示帮助信息并退出。\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--version")]),t._v("                              显示版本信息并退出。\n\n\nKEYDEF的格式为：F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(".C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(",F"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(".C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("OPTS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ，表示开始到结束的位置。\nF表示列的编号\nC表示\nOPTS为"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bdfgiMhnRrV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("中的一到多个字符，用于覆盖当前排序选项。\n使用--debug选项可诊断出错误的用法。\n\n\nSIZE 可以有以下的乘法后缀:\n% 内存的1%；\nb "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("；\nK "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v("（默认）；\n剩余的 M, G, T, P, E, Z, Y 可以类推出来。\n")])])]),a("h2",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),a("p",[t._v("FILE（可选）：要处理的文件，可以为任意数量。")]),t._v(" "),a("h2",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),a("p",[t._v("返回0表示成功，返回非0值表示失败。")]),t._v(" "),a("h2",{attrs:{id:"例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),a("p",[t._v("sort将文件/文本的每一行作为一个单位相互比较，比较原则是从首字符向后依次按ASCII码值进行比较，最后将他们按升序输出。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("root@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mail text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sort.txt")]),t._v("\naaa:10:1.1\nccc:30:3.3\nddd:40:4.4\nbbb:20:2.2\neee:50:5.5\neee:50:5.5\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@mail text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sort sort.txt")]),t._v("\naaa:10:1.1\nbbb:20:2.2\nccc:30:3.3\nddd:40:4.4\neee:50:5.5\neee:50:5.5\n")])])]),a("p",[t._v("忽略相同行使用"),a("code",[t._v("-u")]),t._v("选项或者"),a("code",[t._v("uniq")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@mail text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sort.txt")]),t._v("\naaa:10:1.1\nccc:30:3.3\nddd:40:4.4\nbbb:20:2.2\neee:50:5.5\neee:50:5.5\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@mail text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sort -u sort.txt")]),t._v("\naaa:10:1.1\nbbb:20:2.2\nccc:30:3.3\nddd:40:4.4\neee:50:5.5\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@mail text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uniq sort.txt")]),t._v("\naaa:10:1.1\nccc:30:3.3\nddd:40:4.4\nbbb:20:2.2\neee:50:5.5\n")])])]),a("p",[a("code",[t._v("sort")]),t._v("的"),a("code",[t._v("-n、-r、-k、-t")]),t._v("选项的使用：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@mail text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat sort.txt")]),t._v("\nAAA:BB:CC\naaa:30:1.6\nccc:50:3.3\nddd:20:4.2\nbbb:10:2.5\neee:40:5.4\neee:60:5.1\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将BB列按照数字从小到大顺序排列：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@mail text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sort -nk 2 -t: sort.txt")]),t._v("\nAAA:BB:CC\nbbb:10:2.5\nddd:20:4.2\naaa:30:1.6\neee:40:5.4\nccc:50:3.3\neee:60:5.1\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将CC列数字从大到小顺序排列：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -n是按照数字大小排序，-r是以相反顺序，-k是指定需要排序的栏位，-t指定栏位分隔符为冒号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@mail text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sort -nrk 3 -t: sort.txt")]),t._v("\neee:40:5.4\neee:60:5.1\nddd:20:4.2\nccc:50:3.3\nbbb:10:2.5\naaa:30:1.6\nAAA:BB:CC\n")])])]),a("p",[t._v("关于"),a("code",[t._v("-k")]),t._v("选项的解读和例子：")]),t._v(" "),a("p",[t._v("-k选项深度解读：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("FStart.CStart Modifier,FEnd.CEnd Modifier\n-------Start--------,-------End--------\n FStart.CStart 选项  ,  FEnd.CEnd 选项\n")])])]),a("p",[t._v("这个语法格式可以被其中的逗号"),a("code",[t._v(",")]),t._v("分为两大部分，"),a("strong",[t._v("Start")]),t._v(" 部分和 "),a("strong",[t._v("End")]),t._v(" 部分。\nStart部分由三部分组成，其中的Modifier部分就是我们之前说过的选项部分；\n我们重点说说"),a("code",[t._v("Start")]),t._v("部分的"),a("code",[t._v("FStart")]),t._v("和"),a("code",[t._v("C.Start")]),t._v("；"),a("code",[t._v("C.Start")]),t._v("是可以省略的，省略的话就表示从本域的开头部分开始。"),a("code",[t._v("FStart.CStart")]),t._v("，其中"),a("code",[t._v("FStart")]),t._v("就是表示使用的域，而"),a("code",[t._v("CStart")]),t._v("则表示在"),a("code",[t._v("FStart")]),t._v("域中从第几个字符开始算排序首字符。\n同理，在End部分中，你可以设定"),a("code",[t._v("FEnd.CEnd")]),t._v("，如果你省略"),a("code",[t._v(".CEnd")]),t._v("或将它设定为0，则表示结尾到本域的最后一个字符。")]),t._v(" "),a("p",[t._v("例子：从公司英文名称的第二个字母开始排序：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-k")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" facebook.txt\nbaidu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\nsohu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4500")]),t._v("\ngoogle "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\nguge "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n")])])]),a("p",[t._v("解读：使用了"),a("code",[t._v("-k 1.2")]),t._v("，表示对第一个域的第二个字符开始到本域的最后一个字符为止的字符串进行排序。你会发现baidu因为第二个字母是a而名列榜首。sohu和google第二个字符都是o，但sohu的h在google的o前面，所以两者分别排在第二和第三。guge只能屈居第四了。")]),t._v(" "),a("p",[t._v("例子：只针对公司英文名称的第二个字母进行排序，如果相同的按照员工工资进行降序排序：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-k")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(",1.2 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-nrk")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3,3")]),t._v(" facebook.txt\nbaidu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\ngoogle "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\nsohu "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4500")]),t._v("\nguge "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n")])])]),a("p",[t._v("解读：由于只对第二个字母进行排序，所以我们使用了"),a("code",[t._v("-k 1.2,1.2")]),t._v("的表示方式，表示我们只对第二个字母进行排序（如果你问我使用"),a("code",[t._v("-k 1.2")]),t._v("怎么不行？当然不行，因为你省略了End部分，这就意味着你将对从第二个字母起到本域最后一个字符为止的字符串进行排序）。\n对员工工资进行排序，我们也使用了"),a("code",[t._v("-k 3,3")]),t._v("，这是最准确的表述，表示我们只对本域进行排序，因为如果你省略了后面的3，就变成了我们对第3个域开始到最后一个域位置的内容进行排序了。")]),t._v(" "),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ol",[a("li",[a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/1255782/whats-the-difference-between-general-numeric-sort-and-numeric-sort-options",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于-g和-n选项的区别：stackoverflow"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("关于这个复杂命令的学习，建议您阅读info文档及参考博客、问答网站等。")])]),t._v(" "),a("li",[a("p",[t._v("该命令是"),a("code",[t._v("GNU coreutils")]),t._v("包中的命令，相关的帮助信息请查看"),a("code",[t._v("man -s 1 shuf")]),t._v("，"),a("code",[t._v("info coreutils 'shuf invocation'")]),t._v("。")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);