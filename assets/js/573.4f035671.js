(window.webpackJsonp=window.webpackJsonp||[]).push([[573],{884:function(a,t,s){"use strict";s.r(t);var r=s(14),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"tar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar"}},[a._v("#")]),a._v(" tar")]),a._v(" "),t("p",[a._v("将许多文件一起保存至一个单独的磁带或磁盘归档，并能从归档中单独还原所需文件。")]),a._v(" "),t("h2",{attrs:{id:"补充说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[a._v("#")]),a._v(" 补充说明")]),a._v(" "),t("p",[t("strong",[a._v("tar命令")]),a._v(" 可以为linux的文件和目录创建档案。利用tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。")]),a._v(" "),t("p",[a._v("首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件。")]),a._v(" "),t("p",[a._v("为什么要区分这两个概念呢？这源于Linux中很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（gzip bzip2命令）。")]),a._v(" "),t("h3",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("FILE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("h3",{attrs:{id:"选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("-A, --catenate, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--concatenate")]),a._v("   追加 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" 文件至归档\n-c, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--create")]),a._v("               创建一个新归档\n-d, --diff, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--compare")]),a._v("      找出归档和文件系统的差异\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--delete")]),a._v("               从归档"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("非磁带！"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("中删除\n-r, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--append")]),a._v("               追加文件至归档结尾\n-t, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v("                 列出归档内容\n    --test-label           测试归档卷标并退出\n-u, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--update")]),a._v("               仅追加比归档中副本更新的文件\n-x, --extract, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--get")]),a._v("       从归档中解出文件\n\n操作修饰符:\n\n      --check-device         当创建增量归档时检查设备号"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -g, --listed-incremental"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE   处理新式的 GNU 格式的增量备份\n  -G, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--incremental")]),a._v("          处理老式的 GNU 格式的增量备份\n      --ignore-failed-read\n                             当遇上不可读文件时不要以非零值退出\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--level")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER         所创建的增量列表归档的输出级别\n  -n, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--seek")]),a._v("                 归档可检索\n      --no-check-device      当创建增量归档时不要检查设备号\n      --no-seek              归档不可检索\n      --occurrence"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  仅处理归档中每个文件的第 NUMBER\n                             个事件；仅当与以下子命令 --delete,\n                             --diff, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--extract")]),a._v(" 或是 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v("\n                             中的一个联合使用时，此选项才有效。而且不管文件列表是以命令行形式给出或是通过\n                             "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-T")]),a._v(" 选项指定的；NUMBER 值默认为 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n      --sparse-version"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("MAJOR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(".MINOR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n                             设置所用的离散格式版本"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("隐含\n                             --sparse"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -S, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--sparse")]),a._v("               高效处理离散文件\n\n 重写控制:\n\n  -k, --keep-old-files       don"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'t replace existing files when extracting,\n                             treat them as errors\n      --keep-directory-symlink   preserve existing symlinks to directories when\n                             extracting\n      --keep-newer-files\n                             不要替换比归档中副本更新的已存在的文件\n      --no-overwrite-dir     保留已存在目录的元数据\n      --overwrite            解压时重写存在的文件\n      --overwrite-dir        解压时重写已存在目录的元数据(默认)\n\n      --recursive-unlink     解压目录之前先清除目录层次\n      --remove-files         在添加文件至归档后删除它们\n      --skip-old-files       don'")]),a._v("t replace existing files when extracting,\n                             silently skip over them\n  -U, --unlink-first         在解压要重写的文件之前先删除它们\n  -W, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verify")]),a._v("               在写入以后尝试校验归档\n\n 选择输出流:\n\n      --ignore-command-error 忽略子进程的退出代码\n      --no-ignore-command-error\n                             将子进程的非零退出代码认为发生错误\n  -O, --to-stdout            解压文件至标准输出\n      --to-command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("COMMAND\n                             将解压的文件通过管道传送至另一个程序\n\n 操作文件属性:\n\n      --atime-preserve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("METHOD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n                             在输出的文件上保留访问时间，要么通过在读取"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认\n                             "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("METHOD")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("‘replace’"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("后还原时间，要不就不要在第一次"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("METHOD"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("‘system’"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("设置时间\n      --delay-directory-restore\n                             直到解压结束才设置修改时间和所解目录的权限\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--group")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("名称         强制将 NAME\n                             作为所添加的文件的组所有者\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("CHANGES         强制将所添加的文件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("符号"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("更改为权限\n                             CHANGES\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mtime")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DATE-OR-FILE   从 DATE-OR-FILE 中为添加的文件设置\n                             mtime\n  -m, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--touch")]),a._v("                不要解压文件的修改时间\n      --no-delay-directory-restore\n                             取消 --delay-directory-restore 选项的效果\n      --no-same-owner\n                             将文件解压为您所有"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("普通用户默认此项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --no-same-permissions\n                             从归档中解压权限时使用用户的掩码位"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认为普通用户服务"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --numeric-owner        总是以数字代表用户/组的名称\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--owner")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("名称         强制将 NAME\n                             作为所添加的文件的所有者\n  -p, --preserve-permissions, --same-permissions\n                             解压文件权限信息"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认只为超级用户服务"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--preserve")]),a._v("             与 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" 和 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" 一样\n      --same-owner\n                             尝试解压时保持所有者关系一致"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("超级用户默认此项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -s, --preserve-order, --same-order\n                             member arguments are listed "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" the same order as\n                             the files "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" the archive\n\n Handling of extended "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" attributes:\n\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--acls")]),a._v("                 Enable the POSIX ACLs support\n      --no-acls              Disable the POSIX ACLs support\n      --no-selinux           Disable the SELinux context support\n      --no-xattrs            Disable extended attributes support\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--selinux")]),a._v("              Enable the SELinux context support\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--xattrs")]),a._v("               Enable extended attributes support\n      --xattrs-exclude"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("MASK  specify the exclude pattern "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" xattr keys\n      --xattrs-include"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("MASK  specify the include pattern "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" xattr keys\n\n 设备选择和切换:\n\n  -f, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ARCHIVE         使用归档文件或 ARCHIVE 设备\n      --force-local\n                             即使归档文件存在副本还是把它认为是本地归档\n  -F, --info-script"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("名称, --new-volume-script"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("名称\n                             在每卷磁带最后运行脚本"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("隐含 -M"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -L, --tape-length"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER   写入 NUMBER × "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v(" 字节后更换磁带\n  -M, --multi-volume         创建/列出/解压多卷归档文件\n      --rmt-command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("COMMAND  使用指定的 rmt COMMAND 代替 rmt\n      --rsh-command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("COMMAND  使用远程 COMMAND 代替 rsh\n      --volno-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE      使用/更新 FILE 中的卷数\n\n 设备分块:\n\n  -b, --blocking-factor"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("BLOCKS   每个记录 BLOCKS x "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("512")]),a._v(" 字节\n  -B, --read-full-records    读取时重新分块"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("只对 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(".2BSD 管道有效"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -i, --ignore-zeros         忽略归档中的零字节块"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("即文件结尾"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --record-size"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER   每个记录的字节数 NUMBER，乘以 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("512")]),a._v("\n\n 选择归档格式:\n\n  -H, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FORMAT        创建指定格式的归档\n\n FORMAT 是以下格式中的一种:\n\n    gnu                      GNU "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.13")]),a._v(".x 格式\n    oldgnu                   GNU 格式 as per "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.12")]),a._v("\n    pax                      POSIX "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1003.1")]),a._v("-2001 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("pax"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" 格式\n    posix                    等同于 pax\n    ustar                    POSIX "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1003.1")]),a._v("-1988 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("ustar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" 格式\n    v7                       old V7 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" 格式\n\n      --old-archive, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--portability")]),a._v("\n                             等同于 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("v7\n      --pax-option"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("关键字"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("值"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(",关键字"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("值"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n                             控制 pax 关键字\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--posix")]),a._v("                等同于 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("posix\n  -V, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("TEXT           创建带有卷名 TEXT\n                             的归档；在列出/解压时，使用 TEXT\n                             作为卷名的模式串\n\n 压缩选项:\n\n  -a, --auto-compress        使用归档后缀名来决定压缩程序\n  -I, --use-compress-program"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("PROG\n                             通过 PROG 过滤"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("必须是能接受 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("\n                             选项的程序"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -j, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bzip2")]),a._v("                通过 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" 过滤归档\n  -J, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--xz")]),a._v("                   通过 xz 过滤归档\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--lzip")]),a._v("                 通过 lzip 过滤归档\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--lzma")]),a._v("                 通过 lzma 过滤归档\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--lzop")]),a._v("\n      --no-auto-compress     不使用归档后缀名来决定压缩程序\n  -z, --gzip, --gunzip, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ungzip")]),a._v("   通过 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("gzip")]),a._v(" 过滤归档\n  -Z, --compress, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--uncompress")]),a._v("   通过 compress 过滤归档\n\n 本地文件选择:\n\n      --add-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE        添加指定的 FILE 至归档"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("如果名字以 -\n                             开始会很有用的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --backup"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("CONTROL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("     在删除前备份，选择 CONTROL 版本\n  -C, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--directory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DIR        改变至目录 DIR\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("PATTERN      排除以 PATTERN 指定的文件\n      --exclude-backups      排除备份和锁文件\n      --exclude-caches       除标识文件本身外，排除包含\n                             CACHEDIR.TAG 的目录中的内容\n      --exclude-caches-all   排除包含 CACHEDIR.TAG 的目录\n      --exclude-caches-under 排除包含 CACHEDIR.TAG 的目录中所有内容\n\n      --exclude-tag"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE     除 FILE 自身外，排除包含 FILE\n                             的目录中的内容\n      --exclude-tag-all"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE 排除包含 FILE 的目录\n      --exclude-tag-under"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE   排除包含 FILE 的目录中的所有内容\n      --exclude-vcs          排除版本控制系统目录\n  -h, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dereference")]),a._v("\n                             跟踪符号链接；将它们所指向的文件归档并输出\n      --hard-dereference\n                             跟踪硬链接；将它们所指向的文件归档并输出\n  -K, --starting-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("MEMBER-NAME\n                             begin at member MEMBER-NAME when reading the\n                             archive\n      --newer-mtime"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DATE     当只有数据改变时比较数据和时间\n      --no-null              禁用上一次的效果 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--null")]),a._v(" 选项\n      --no-recursion         避免目录中的自动降级\n      --no-unquote           不以 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-T")]),a._v(" 读取的文件名作为引用结束\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--null")]),a._v("                 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-T")]),a._v(" 读取以空终止的名字，-C 禁用\n  -N, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--newer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DATE-OR-FILE, --after-date"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("DATE-OR-FILE\n                             只保存比 DATE-OR-FILE 更新的文件\n      --one-file-system      创建归档时保存在本地文件系统中\n  -P, --absolute-names       不要从文件名中清除引导符‘/’\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--recursion")]),a._v("            目录递归"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--suffix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("STRING        在删除前备份，除非被环境变量\n                             SIMPLE_BACKUP_SUFFIX\n                             覆盖，否则覆盖常用后缀"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("‘’"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -T, --files-from"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE      从 FILE\n                             中获取文件名来解压或创建文件\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--unquote")]),a._v("              以 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-T")]),a._v("\n                             读取的文件名作为引用结束"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  -X, --exclude-from"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE    排除 FILE 中列出的模式串\n\n 文件名变换:\n\n      --strip-components"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER   解压时从文件名中清除 NUMBER\n                             个引导部分\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--transform")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("EXPRESSION, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--xform")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("EXPRESSION\n                             使用 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" 代替 EXPRESSION\n                             来进行文件名变换\n\n 文件名匹配选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("同时影响排除和包括模式串"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(":\n\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--anchored")]),a._v("             模式串匹配文件名头部\n      --ignore-case          忽略大小写\n      --no-anchored          模式串匹配任意‘/’后字符"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认对\n                             exclusion 有效"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --no-ignore-case       匹配大小写"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --no-wildcards         逐字匹配字符串\n      --no-wildcards-match-slash   通配符不匹配‘/’\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wildcards")]),a._v("            use wildcards "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("default"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --wildcards-match-slash\n                             通配符匹配‘/’"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认对排除操作有效"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n 提示性输出:\n\n      --checkpoint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  每隔 NUMBER\n                             个记录显示进度信息"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认为 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" 个"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n      --checkpoint-action"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("ACTION   在每个检查点上执行 ACTION\n      --full-time            print "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("time")]),a._v(" to its full resolution\n      --index-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FILE      将详细输出发送至 FILE\n  -l, --check-links\n                             只要不是所有链接都被输出就打印信息\n      --no-quote-chars"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("STRING   禁用来自 STRING 的字符引用\n      --quote-chars"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("STRING   来自 STRING 的额外的引用字符\n      --quoting-style"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("STYLE  设置名称引用风格；有效的 STYLE\n                             值请参阅以下说明\n  -R, --block-number         每个信息都显示归档内的块数\n      --show-defaults        显示 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" 默认选项\n      --show-omitted-dirs\n                             列表或解压时，列出每个不匹配查找标准的目录\n      --show-transformed-names, --show-stored-names\n                             显示变换后的文件名或归档名\n      --totals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("SIGNAL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("      处理归档后打印出总字节数；当此\n                             SIGNAL 被触发时带参数 -\n                             打印总字节数；允许的信号为:\n                             SIGHUP，SIGQUIT，SIGINT，SIGUSR1 和\n                             SIGUSR2；同时也接受不带 SIG\n                             前缀的信号名称\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--utc")]),a._v("                  以 UTC 格式打印文件修改时间\n  -v, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v("              详细地列出处理的文件\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--warning")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("KEYWORD      警告控制:\n  -w, --interactive, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--confirmation")]),a._v("\n                             每次操作都要求确认\n\n 兼容性选项:\n\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v("                         创建归档时，相当于\n                             --old-archive；展开归档时，相当于\n                             --no-same-owner\n\n 其它选项:\n\n  -?, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("                 显示此帮助列表\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--restrict")]),a._v("             禁用某些潜在的有危险的选项\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--usage")]),a._v("                显示简短的用法说明\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("              打印程序版本\n\n长选项和相应短选项具有相同的强制参数或可选参数。\n\n除非以 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--suffix")]),a._v(" 或 SIMPLE_BACKUP_SUFFIX\n设置备份后缀，否则备份后缀就是“~”。\n可以用 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--backup")]),a._v(" 或 VERSION_CONTROL 设置版本控制，可能的值为：\n\n  none, off\t   从不做备份\n  t, numbered     进行编号备份\n  nil, existing\n如果编号备份存在则进行编号备份，否则进行简单备份\n  never, simple   总是使用简单备份\n\n--quoting-style 选项的有效参数为:\n\n  literal\n  shell\n  shell-always\n  c\n  c-maybe\n  escape\n  locale\n  clocale\n\n此 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" 默认为:\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("gnu -f- "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b20")]),a._v(" --quoting-style"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("escape --rmt-command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/etc/rmt\n--rsh-command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/bin/ssh\n")])])]),t("h3",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),t("p",[a._v("文件或目录：指定要打包的文件或目录列表。")]),a._v(" "),t("h3",{attrs:{id:"实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[a._v("#")]),a._v(" 实例")]),a._v(" "),t("p",[a._v("将 "),t("code",[a._v("/home/vivek/bin/")]),a._v(" 目录打包，并使用 gzip 算法压缩。保存为 "),t("code",[a._v("/tmp/bin-backup.tar.gz")]),a._v(" 文件。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("tar -zcvf /tmp/bin-backup.tar.gz /home/vivek/bin/\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("- z：有gzip属性的\n- j：有bz2属性的\n- Z：有compress属性的\n- v：显示所有过程\n- O：将文件解开到标准输出\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cf")]),a._v(" archive.tar foo bar  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从文件 foo 和 bar 创建归档文件 archive.tar。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tvf")]),a._v(" archive.tar         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 详细列举归档文件 archive.tar 中的所有文件。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xf")]),a._v(" archive.tar          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 展开归档文件 archive.tar 中的所有文件。")]),a._v("\n")])])]),t("p",[a._v("下面的参数-f是必须的")]),a._v(" "),t("p",[a._v("-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cf")]),a._v(" all.tar *.jpg\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" all.tar *.gif\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-uf")]),a._v(" all.tar logo.gif\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tf")]),a._v(" all.tar\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这条命令是列出all.tar包中所有文件，-t是列出文件的意思")]),a._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cvf")]),a._v(" archive.tar foo bar  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从文件foo和bar创建archive.tar。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-tvf")]),a._v(" archive.tar         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 详细列出archive.tar中的所有文件。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xf")]),a._v(" archive.tar          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 从archive.tar提取所有文件。")]),a._v("\n")])])]),t("h4",{attrs:{id:"zip格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zip格式"}},[a._v("#")]),a._v(" zip格式")]),a._v(" "),t("p",[a._v("压缩： zip -r [目标文件名].zip [原文件/目录名]"),t("br"),a._v("\n解压： unzip [原文件名].zip"),t("br"),a._v("\n注：-r参数代表递归")]),a._v(" "),t("h4",{attrs:{id:"tar格式-该格式仅仅打包-不压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar格式-该格式仅仅打包-不压缩"}},[a._v("#")]),a._v(" tar格式（该格式仅仅打包，不压缩）")]),a._v(" "),t("p",[a._v("打包：tar -cvf [目标文件名].tar [原文件名/目录名]"),t("br"),a._v("\n解包：tar -xvf [原文件名].tar"),t("br"),a._v("\n注：c参数代表create（创建），x参数代表extract（解包），v参数代表verbose（详细信息），f参数代表filename（文件名），所以f后必须接文件名。")]),a._v(" "),t("h4",{attrs:{id:"tar-gz格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-gz格式"}},[a._v("#")]),a._v(" tar.gz格式")]),a._v(" "),t("p",[a._v("方式一：利用前面已经打包好的tar文件，直接用压缩命令。")]),a._v(" "),t("p",[a._v("压缩：gzip [原文件名].tar"),t("br"),a._v("\n解压：gunzip [原文件名].tar.gz")]),a._v(" "),t("p",[a._v("方式二：一次性打包并压缩、解压并解包")]),a._v(" "),t("p",[a._v("打包并压缩： tar -zcvf [目标文件名].tar.gz [原文件名/目录名]"),t("br"),a._v("\n解压并解包： tar -zxvf [原文件名].tar.gz"),t("br"),a._v("\n注：z代表用gzip算法来压缩/解压。")]),a._v(" "),t("h4",{attrs:{id:"tar-bz2格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-bz2格式"}},[a._v("#")]),a._v(" tar.bz2格式")]),a._v(" "),t("p",[a._v("方式一：利用已经打包好的tar文件，直接执行压缩命令：")]),a._v(" "),t("p",[a._v("压缩：bzip2 [原文件名].tar"),t("br"),a._v("\n解压：bunzip2 [原文件名].tar.bz2"),t("br"),a._v("\n方式二：一次性打包并压缩、解压并解包")]),a._v(" "),t("p",[a._v("打包并压缩： tar -jcvf [目标文件名].tar.bz2 [原文件名/目录名]"),t("br"),a._v("\n解压并解包： tar -jxvf [原文件名].tar.bz2"),t("br"),a._v("\n注：小写j代表用bzip2算法来压缩/解压。")]),a._v(" "),t("h4",{attrs:{id:"tar-xz格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-xz格式"}},[a._v("#")]),a._v(" tar.xz格式")]),a._v(" "),t("p",[a._v("方式一：利用已经打包好的tar文件，直接用压缩命令：")]),a._v(" "),t("p",[a._v("压缩：xz [原文件名].tar"),t("br"),a._v("\n解压：unxz [原文件名].tar.xz"),t("br"),a._v("\n方式二：一次性打包并压缩、解压并解包")]),a._v(" "),t("p",[a._v("打包并压缩： tar -Jcvf [目标文件名].tar.xz [原文件名/目录名]"),t("br"),a._v("\n解压并解包： tar -Jxvf [原文件名].tar.xz"),t("br"),a._v("\n注：大写J代表用xz算法来压缩/解压。")]),a._v(" "),t("h4",{attrs:{id:"tar-z格式-已过时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar-z格式-已过时"}},[a._v("#")]),a._v(" tar.Z格式（已过时）")]),a._v(" "),t("p",[a._v("方式一：利用已经打包好的tar文件，直接用压缩命令：")]),a._v(" "),t("p",[a._v("压缩：compress [原文件名].tar"),t("br"),a._v("\n解压：uncompress [原文件名].tar.Z"),t("br"),a._v("\n方式二：一次性打包并压缩、解压并解包")]),a._v(" "),t("p",[a._v("打包并压缩： tar -Zcvf [目标文件名].tar.Z [原文件名/目录名]"),t("br"),a._v("\n解压并解包： tar -Zxvf [原文件名].tar.Z"),t("br"),a._v("\n注：大写Z代表用ncompress算法来压缩/解压。另，ncompress是早期Unix系统的压缩格式，但由于ncompress的压缩率太低，现已过时。")]),a._v(" "),t("h4",{attrs:{id:"jar格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jar格式"}},[a._v("#")]),a._v(" jar格式")]),a._v(" "),t("p",[a._v("压缩：jar -cvf [目标文件名].jar [原文件名/目录名]"),t("br"),a._v("\n解压：jar -xvf [原文件名].jar")]),a._v(" "),t("p",[a._v("注：如果是打包的是Java类库，并且该类库中存在主类，那么需要写一个META-INF/MANIFEST.MF配置文件，内容如下：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("Manifest-Version: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v("\nCreated-By: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.6")]),a._v(".0_27 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("Sun Microsystems Inc."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nMain-class: the_name_of_the_main_class_should_be_put_here\n")])])]),t("p",[a._v("然后用如下命令打包：")]),a._v(" "),t("p",[a._v("jar -cvfm [目标文件名].jar META-INF/MANIFEST.MF [原文件名/目录名]"),t("br"),a._v("\n这样以后就能用“java -jar [文件名].jar”命令直接运行主类中的public static void main方法了。")]),a._v(" "),t("h4",{attrs:{id:"_7z格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7z格式"}},[a._v("#")]),a._v(" 7z格式")]),a._v(" "),t("p",[a._v("压缩：7z a [目标文件名].7z [原文件名/目录名]"),t("br"),a._v("\n解压：7z x [原文件名].7z"),t("br"),a._v("\n注：这个7z解压命令支持rar格式，即：")]),a._v(" "),t("p",[a._v("7z x [原文件名].rar")]),a._v(" "),t("h4",{attrs:{id:"其它例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它例子"}},[a._v("#")]),a._v(" 其它例子")]),a._v(" "),t("p",[t("strong",[a._v("将文件全部打包成tar包")]),a._v(" ：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cvf")]),a._v(" log.tar log2012.log    仅打包，不压缩！\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zcvf")]),a._v(" log.tar.gz log2012.log   打包后，以 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("gzip")]),a._v(" 压缩\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jcvf")]),a._v(" log.tar.bz2 log2012.log  打包后，以 "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bzip2")]),a._v(" 压缩\n")])])]),t("p",[a._v("在选项"),t("code",[a._v("f")]),a._v("之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。 如果加"),t("code",[a._v("z")]),a._v("选项，则以.tar.gz或.tgz来代表gzip压缩过的tar包；如果加"),t("code",[a._v("j")]),a._v("选项，则以.tar.bz2来作为tar包名。")]),a._v(" "),t("p",[t("strong",[a._v("解压目录")])]),a._v(" "),t("p",[a._v("参数--strip-components NUMBER，在提取时从文件名中删除NUMBER个前导组件，如要去除前二层，参数为--strip-components 2")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xvf")]),a._v(" portal-web-v2.0.0.tar --strip-components "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" 指定目录\n")])])]),t("p",[a._v("示例")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xvf")]),a._v(" xxx.tar.gz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" /usr/src/a\n/usr/src/a/xxxxx/src/opp/b.txt\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xvf")]),a._v(" xxx.tar.gz -strip-components"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" /usr/src/a\n/usr/src/a/src/opp/b.txt\n")])])]),t("p",[t("strong",[a._v("查阅上述tar包内有哪些文件")]),a._v(" ：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ztvf")]),a._v(" log.tar.gz\n")])])]),t("p",[a._v("由于我们使用 gzip 压缩的log.tar.gz，所以要查阅log.tar.gz包内的文件时，就得要加上"),t("code",[a._v("z")]),a._v("这个选项了。")]),a._v(" "),t("p",[t("strong",[a._v("将tar包解压缩")]),a._v(" ：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zxvf")]),a._v(" /opt/soft/test/log.tar.gz\n")])])]),t("p",[a._v("在预设的情况下，我们可以将压缩档在任何地方解开的")]),a._v(" "),t("p",[t("strong",[a._v("只将tar内的部分文件解压出来")]),a._v(" ：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zxvf")]),a._v(" /opt/soft/test/log30.tar.gz log2013.log\n")])])]),t("p",[a._v("我可以透过"),t("code",[a._v("tar -ztvf")]),a._v("来查阅 tar 包内的文件名称，如果单只要一个文件，就可以透过这个方式来解压部分文件！")]),a._v(" "),t("p",[t("strong",[a._v("文件备份下来，并且保存其权限")]),a._v(" ：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zcvpf")]),a._v(" log31.tar.gz log2014.log log2015.log log2016.log\n")])])]),t("p",[a._v("这个"),t("code",[a._v("-p")]),a._v("的属性是很重要的，尤其是当您要保留原本文件的属性时。")]),a._v(" "),t("p",[t("strong",[a._v("在文件夹当中，比某个日期新的文件才备份")]),a._v(" ：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-N")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2012/11/13"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zcvf")]),a._v(" log17.tar.gz "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),t("p",[t("strong",[a._v("备份文件夹内容是排除部分文件：")])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--exclude")]),a._v(" scf/service "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-zcvf")]),a._v(" scf.tar.gz scf/*\n")])])]),t("p",[t("strong",[a._v("打包文件之后删除源文件：")])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cvf")]),a._v(" test.tar "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" --remove-files\n")])])]),t("p",[t("strong",[a._v("其实最简单的使用 tar 就只要记忆底下的方式即可：")])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("压　缩：tar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jcv")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" filename.tar.bz2 要被压缩的文件或目录名称\n查　询：tar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jtv")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" filename.tar.bz2\n解压缩：tar "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jxv")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" filename.tar.bz2 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" 欲解压缩的目录\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);