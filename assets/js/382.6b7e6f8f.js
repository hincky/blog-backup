(window.webpackJsonp=window.webpackJsonp||[]).push([[382],{695:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"mapfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mapfile"}},[a._v("#")]),a._v(" mapfile")]),a._v(" "),t("p",[a._v("从标准输入读取行并赋值到数组。")]),a._v(" "),t("h2",{attrs:{id:"概要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[a._v("#")]),a._v(" 概要")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-d delim"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-n count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-O origin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-s count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-u fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-C callback"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-c quantum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("h2",{attrs:{id:"主要用途"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要用途"}},[a._v("#")]),a._v(" 主要用途")]),a._v(" "),t("ul",[t("li",[a._v("从标准输入或文件描述符读取行并赋值到数组。")])]),a._v(" "),t("h2",{attrs:{id:"选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" delim       将delim设为行分隔符，代替默认的换行符。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" count       从标准输入中获取最多count行，如果count为零那么获取全部。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" origin      从数组下标为origin的位置开始赋值，默认的下标为0。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" count       跳过对前count行的读取。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v("             读取时移除行分隔符delim（默认为换行符）。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" fd          从文件描述符fd中读取。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" callback    每当读取了quantum行时，调用callback语句。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" quantum     设定读取的行数为quantum。\n\n如果使用-C时没有同时使用-c指定quantum的值，那么quantum默认为5000。\n当callback语句执行时，将数组下一个要赋值的下标以及读取的行作为额外的参数传递给callback语句。\n如果使用-O时没有提供起始位置，那么mapfile会在实际赋值之前清空该数组。\n")])])]),t("h2",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),t("p",[a._v("array（可选）：用于输出的数组名称。如果没有指定数组名称，那么会默认写入到变量名为MAPFILE的数组中。")]),a._v(" "),t("h2",{attrs:{id:"返回值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[a._v("#")]),a._v(" 返回值")]),a._v(" "),t("p",[a._v("返回成功除非使用了非法选项、指定的数组是只读的、指定的数组不是下标数组。")]),a._v(" "),t("h2",{attrs:{id:"例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[a._v("#")]),a._v(" 例子")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 常见的读取形式。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file target_array\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" target_array\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" fd target_array\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只读取前5行。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" target_array\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 跳过前5行。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" target_array\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在数组指定的下标开始赋值。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 请注意：这样做不会清空该数组。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" target_array\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 读取时设定行分隔符为tab。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 注意，第二行的tab在终端需要用ctrl+v tab输入；")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("$'"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v("'")]),a._v(" target_array\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'\t'")]),a._v(" target_array\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 读取时移除行分隔符（tab）。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("$'"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v("'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" target_array\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 读取时移除行分隔符（换行符）。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" target_array\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 每读取2行，执行一次语句（在这里是echo）。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("mapfile")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" source_file "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"echo CALLBACK:"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" target_array\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 遍历下标，依次显示数组的元素。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("i")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("target_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("printf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%s"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${target_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),t("h3",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[a._v("#")]),a._v(" 注意")]),a._v(" "),t("ol",[t("li",[a._v("该命令是bash内建命令，相关的帮助信息请查看"),t("code",[a._v("help")]),a._v("命令。")]),a._v(" "),t("li",[a._v("bash内建命令readarray是mapfile的同义词。")])])])}),[],!1,null,null,null);t.default=r.exports}}]);