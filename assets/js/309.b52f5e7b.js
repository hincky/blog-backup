(window.webpackJsonp=window.webpackJsonp||[]).push([[309],{622:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"iperf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iperf"}},[a._v("#")]),a._v(" iperf")]),a._v(" "),s("p",[a._v("网络性能测试工具")]),a._v(" "),s("h2",{attrs:{id:"补充说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[a._v("#")]),a._v(" 补充说明")]),a._v(" "),s("p",[s("strong",[a._v("iperf命令")]),a._v(" 是一个网络性能测试工具。iperf可以测试TCP和UDP带宽质量。iperf可以测量最大TCP带宽，具有多种参数和UDP特性。iperf可以报告带宽，延迟抖动和数据包丢失。利用iperf这一特性，可以用来测试一些网络设备如路由器，防火墙，交换机等的性能。")]),a._v(" "),s("p",[a._v("iperf分为两种版本，Unix/Linux版和Windows版，Unix/Linux版更新比较快，版本最新。Windows版更新慢。Windows版的iperf叫jperf，或者xjperf。jperf是在iperf基础上开发了更好的UI和新的功能。")]),a._v(" "),s("p",[a._v("Linux版本下载地址：http://code.google.com/p/iperf/downloads/list")]),a._v(" "),s("h3",{attrs:{id:"安装iperf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装iperf"}},[a._v("#")]),a._v(" 安装iperf")]),a._v(" "),s("p",[a._v("对于windows版的iperf，直接将解压出来的iperf.exe和cygwin1.dll复制到%systemroot%目录即可，对于linux版的iperf，请使用如下命令安装：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("gunzip "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" iperf-"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(".tar.gz "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xvf")]),a._v(" -\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" iperf-"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n./configure\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),s("h3",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-f, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("bkmaBKMA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 格式化带宽数输出。支持的格式有： ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'b' = bits/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'B' = Bytes/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'k' = Kbits/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'K' = KBytes/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'm' = Mbits/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'M' = MBytes/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'g' = Gbits/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'G' = GBytes/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'a' = adaptive bits/sec ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 'A' = adaptive Bytes/sec 自适应格式是kilo-和mega-二者之一。")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 除了带宽之外的字段都输出为字节，除非指定输出的格式，默认的参数是a。 ")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 注意：在计算字节byte时，Kilo = 1024， Mega = 1024^2，Giga = 1024^3。")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 通常，在网络中，Kilo = 1000， Mega = 1000^2， and Giga = 1000^3，所以，Iperf也按此来计算比特（位）。")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果这些困扰了你，那么请使用-f b参数，然后亲自计算一下。")]),a._v("\n-i, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--interval")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#           # 设置每次报告之间的时间间隔，单位为秒。如果设置为非零值，就会按照此时间间隔输出测试报告。默认值为零。")]),a._v("\n-l, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--len")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#\\[KM]           # 设置读写缓冲区的长度。TCP方式默认为8KB，UDP方式默认为1470字节。")]),a._v("\n-m, --print"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("_mss           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出TCP MSS值（通过TCP\\_MAXSEG支持）。MSS值一般比MTU值小40字节。通常情况")]),a._v("\n-p, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#               # 设置端口，与服务器端的监听端口一致。默认是5001端口，与ttcp的一样。")]),a._v("\n-u, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--udp")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用UDP方式而不是TCP方式。参看-b选项。")]),a._v("\n-w, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--window")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#\\[KM]        # 设置套接字缓冲区为指定大小。对于TCP方式，此设置为TCP窗口大小。")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 对于UDP方式，此设置为接受UDP数据包的缓冲区大小，限制可以接受数据包的最大值。")]),a._v("\n-B, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bind")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 绑定到主机的多个地址中的一个。对于客户端来说，这个参数设置了出栈接口。对于服务器端来说，")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这个参数设置入栈接口。这个参数只用于具有多网络接口的主机。在Iperf的UDP模式下，此参数用于绑定和加入一个多播组。")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用范围在224.0.0.0至239.255.255.255的多播地址。参考-T参数。")]),a._v("\n-C, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--compatibility")]),a._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 与低版本的Iperf使用时，可以使用兼容模式。不需要两端同时使用兼容模式，但是强烈推荐两端同时使用兼容模式。")]),a._v("\n                           "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 某些情况下，使用某些数据流可以引起1.7版本的服务器端崩溃或引起非预期的连接尝试。")]),a._v("\n-M, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mss")]),a._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ip头减去40字节。在以太网中，MSS值 为1460字节（MTU1500字节）。许多操作系统不支持此选项。")]),a._v("\n-N, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--nodelay")]),a._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置TCP无延迟选项，禁用Nagle's运算法则。通常情况此选项对于交互程序，例如telnet，是禁用的。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-V")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("from v1.6 or higher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 绑定一个IPv6地址。 服务端：$ iperf -s –V 客户端：$ iperf -c -V 注意：在1.6.3或更高版本中，指定IPv6地址不需要使用-B参数绑定，在1.6之前的版本则需要。在大多数操作系统中，将响应IPv4客户端映射的IPv4地址。")]),a._v("\n")])])]),s("p",[a._v("服务器端专用选项")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-s, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--server")]),a._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Iperf服务器模式")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-D")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("v1.2或更高版本"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Unix平台下Iperf作为后台守护进程运行。在Win32平台下，Iperf将作为服务运行。")]),a._v("\n-R"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("v1.2或更高版本，仅用于Windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 卸载Iperf服务（如果它在运行）。")]),a._v("\n-o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("v1.2或更高版本，仅用于Windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 重定向输出到指定文件")]),a._v("\n-c, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--client")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v("               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果Iperf运行在服务器模式，并且用-c参数指定一个主机，那么Iperf将只接受指定主机的连接。此参数不能工作于UDP模式。")]),a._v("\n-P, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--parallel")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#                # 服务器关闭之前保持的连接数。默认是0，这意味着永远接受连接。")]),a._v("\n")])])]),s("p",[a._v("客户端专用选项")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-b, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bandwidth")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#\\[KM]       # UDP模式使用的带宽，单位bits/sec。此选项与-u选项相关。默认值是1 Mbit/sec。 ")]),a._v("\n-c, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--client")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行Iperf的客户端模式，连接到指定的Iperf服务器端。 ")]),a._v("\n-d, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dualtest")]),a._v("               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行双测试模式。这将使服务器端反向连接到客户端，")]),a._v("\n                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用-L 参数中指定的端口（或默认使用客户端连接到服务器端的端口）。")]),a._v("\n                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这些在操作的同时就立即完成了。如果你想要一个交互的测试，请尝试-r参数。 ")]),a._v("\n-n, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--num")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#\\[KM]             # 传送的缓冲器数量。通常情况，Iperf按照10秒钟发送数据。")]),a._v("\n                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -n参数跨越此限制，按照指定次数发送指定长度的数据，而不论该操作耗费多少时间。参考-l与-t选项。 ")]),a._v("\n-r, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tradeoff")]),a._v("               "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 往复测试模式。当客户端到服务器端的测试结束时，服务器端通过-l选项指定的端口（或默认为客户端连接到服务器端的端口），")]),a._v("\n                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 反向连接至客户端。当客户端连接终止时，反向连接随即开始。如果需要同时进行双向测试，请尝试-d参数。 ")]),a._v("\n-t, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#                 # 设置传输的总时间。Iperf在指定的时间内，重复的发送指定长度的数据包。默认是10秒钟。参考-l与-n选项。 ")]),a._v("\n-L, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--listenport")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#           # 指定服务端反向连接到客户端时使用的端口。默认使用客户端连接至服务端的端口。 ")]),a._v("\n-P, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--parallel")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#             # 线程数。指定客户端与服务端之间使用的线程数。默认是1线程。需要客户端与服务器端同时使用此参数。 ")]),a._v("\n-S, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tos")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#                  # 出栈数据包的服务类型。许多路由器忽略TOS字段。你可以指定这个值，使用以"0x"开始的16进制数，')]),a._v("\n                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或以\"0\"开始的8进制数或10进制数。 例如，16进制'0x10' = 8进制'020' = 十进制'16'。")]),a._v("\n                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# TOS值1349就是： IPTOS\\_LOWDELAY minimize delay 0x10 IPTOS\\_THROUGHPUT maximize ")]),a._v("\n                             "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# throughput 0x08 IPTOS\\_RELIABILITY maximize reliability 0x04 IPTOS\\_LOWCOST minimize cost 0x02 ")]),a._v("\n-T, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ttl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#                  # 出栈多播数据包的TTL值。这本质上就是数据通过路由器的跳数。默认是1，链接本地。 ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("from v1.2 or higher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用特定的数据流测量带宽，例如指定的文件。 $ iperf -c -F ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-I")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("from v1.2 or higher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 与-F一样，由标准输入输出文件输入数据。 ")]),a._v("\n")])])]),s("p",[a._v("杂项")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("-h, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示命令行参考并退出 。")]),a._v("\n-v, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示版本信息和编译信息并退出。")]),a._v("\n")])])]),s("h3",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[a._v("#")]),a._v(" 实例")]),a._v(" "),s("p",[a._v("带宽测试通常采用UDP模式，因为能测出极限带宽、时延抖动、丢包率。在进行测试时，首先以链路理论带宽作为数据发送速率进行测试，例如，从客户端到服务器之间的链路的理论带宽为100Mbps，先用"),s("code",[a._v("-b 100M")]),a._v("进行测试，然后根据测试结果（包括实际带宽，时延抖动和丢包率），再以实际带宽作为数据发送速率进行测试，会发现时延抖动和丢包率比第一次好很多，重复测试几次，就能得出稳定的实际带宽。")]),a._v(" "),s("p",[s("strong",[a._v("UDP模式")])]),a._v(" "),s("p",[a._v("服务器端：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("iperf "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v("\n")])])]),s("p",[a._v("客户端：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("iperf "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" 100M "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),a._v("\n")])])]),s("p",[a._v("在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.1.1上传带宽测试，测试时间为60秒。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("iperf "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" 5M "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),a._v("\n")])])]),s("p",[a._v("客户端同时向服务器端发起30个连接线程，以5Mbps为数据发送速率。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("iperf "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" 100M "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),a._v("\n")])])]),s("p",[a._v("以100M为数据发送速率，进行上下行带宽测试。")]),a._v(" "),s("p",[s("strong",[a._v("TCP模式")])]),a._v(" "),s("p",[a._v("服务器端：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("iperf "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v("\n")])])]),s("p",[a._v("客户端：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("iperf "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),a._v("\n")])])]),s("p",[a._v("在tcp模式下，客户端到服务器192.168.1.1上传带宽测试，测试时间为60秒。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("iperf "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.1  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),a._v("\n")])])]),s("p",[a._v("客户端同时向服务器端发起30个连接线程。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("iperf "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.1  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("60")]),a._v("\n")])])]),s("p",[a._v("进行上下行带宽测试。")])])}),[],!1,null,null,null);s.default=r.exports}}]);