(window.webpackJsonp=window.webpackJsonp||[]).push([[294],{606:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"indent"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#indent"}},[s._v("#")]),s._v(" indent")]),s._v(" "),t("p",[s._v("格式化C语言的源文件")]),s._v(" "),t("h2",{attrs:{id:"补充说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[s._v("#")]),s._v(" 补充说明")]),s._v(" "),t("p",[t("strong",[s._v("indent命令")]),s._v(" 可辨识C的原始代码文件，并加以格式化，以方便程序员阅读、修改等操作。")]),s._v(" "),t("h3",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("indent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("源文件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n或\nindent（选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("源文件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-o 目标文件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("h3",{attrs:{id:"选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[s._v("#")]),s._v(" 选项")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("-bad：在声明区加上空白行；\n-bap：添加空白行；\n-bbb：在注释后面添加空白行；\n-bc：在声明段中，如果出现逗号就换行；\n-bl：if（或是else、for等）与后面执行区段的“"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("”不同行，且“"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("”自成一行-bli"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("缩排格数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("设置"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("缩排的格数；\n-br：if（或是else、for等）与后面执行区段的“"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("”同行，且“"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("”自成一行；\n-bs：在sizeof之后空一格；\n-c"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("栏数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：将注释置于程序右侧指定的栏位；\n-cd"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("栏数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：将注释置于声明右侧指定的栏位；\n-cdb：注释符号自成一行；\n-ce：将else置于“"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("”（if执行区段的结尾）之后；\n-ci："),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("缩排格数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：叙述过长而换行时，指定换行后缩排的格数；\n-cli"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("缩排格数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：使用case时，switch缩排的格数；\n-cp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("栏数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：将注释置于else与elseif叙述右侧指定的栏位；\n-cs：在case之后空一格；\n-d"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("缩排格数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：针对不是放在程序码右侧的注释，设置其缩排格数；\n-di"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("栏数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：将声明区段的变量置于指定的栏位；\n-fc1：针对放在每行最前端的注释，设置其格式；\n-fca：设置所有注释的格式；\n-gnu：使用指定的GNU格式，该参数为默认值；\n-i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("格数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置缩排的格数；\n-ip"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("格数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置参数的缩排格数；\n-kr：指定使用Kernighan"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("Ritchie的格式；\n-lp：叙述过长而换行，且叙述中包含了括号时，将括号中的每行起始栏位内容垂直对其排列；\n-nbad：在声明区段后不要加上空白行；\n-nbap：在程序后面不添加空白行；\n-nbbb：在注释段后面不添加空白行；\n-nbc：在声明段中，即使出现逗号，也不换行；\n-ncdb：注释符号不自成一行；\n-nce：不将else置于“"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("”后面；\n-ncs：不在case后面空一格；\n-nfc1：不要格式化放在每行最前端的注释；\n-nfca：不用格式化任何的注释；\n-nip：参数不要缩排；\n-nlp：叙述过长而换行，且叙述中包含了括号时，不用将括号中的每行起始栏位垂直对其排列；\n-npcs：在调用函数名之后，不要添加空格；\n-npro：不要读取indent的配置文件“.indent.pro”；\n-npsl：程序类型与程序名称放在同一行；\n-nsc：注释左侧不要添加星号；\n-nsob：不用处理多余的空白行；\n-nss：若for或while区段仅有一行时，在分号前不加空格；\n-nv：不显示详细的信息；\n-orig：使用berkeley格式；\n-pcs：在调用函数名与“"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("”之间添加空格；\n-psl：程序类型置于程序名称的前一行；\n-sc：在每行注释左侧添加星号；\n-sob：删除多余的空白行；\n-ss：若for或swile区段仅有一行时，在分号前加上空格；\n-st：将结果显示在标准输出设备上；\n-T：数据类型名称缩排；\n-ts"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("格数"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("：设置tab的长度；\n-v：显示详细的执行过程；\n--version：显示版本信息。\n")])])]),t("h3",{attrs:{id:"实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[s._v("#")]),s._v(" 实例")]),s._v(" "),t("p",[s._v('使用indent命令将C语言源文件"test.c"中所有的sizeof后面添加一个空格，输入如下命令：')]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("indent "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-bs")]),s._v(" /home/rootlocal/桌面/test.c\n")])])]),t("p",[s._v("执行上面的命令后，用户可以打开指定的源文件查看在sizeof后面是否都添加了一个空格。由于该命令的参数非常多，所以用户可以根据实际需要选择适合的参数进行使用即可。")])])}),[],!1,null,null,null);t.default=e.exports}}]);