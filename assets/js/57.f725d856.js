(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{365:function(e,s,a){"use strict";a.r(s);var t=a(14),r=Object(t.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service"}},[e._v("#")]),e._v(" service")]),e._v(" "),s("p",[e._v("它是 Kubernetes 内置的负载均衡机制:")]),e._v(" "),s("ol",[s("li",[e._v("使用静态 IP 地址代理动态变化的 Pod")]),e._v(" "),s("li",[e._v("支持域名访问和服务发现，是微服务架构必需的基础设施。")])]),e._v(" "),s("p",[s("code",[e._v("Service")]),e._v(" 本身是没有服务能力的，它只是一些 "),s("code",[e._v("iptables")]),e._v(" 规则。")]),e._v(" "),s("p",[e._v("节点里的 "),s("code",[e._v("kube-proxy")]),e._v(" 组件才是真正配置、应用这些规则的。如果没有 "),s("code",[e._v("kube-proxy")]),e._v("，"),s("code",[e._v("Service")]),e._v(" 定义得再完善也没有用。")]),e._v(" "),s("h2",{attrs:{id:"实战-如何用yaml编写service-kube-proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实战-如何用yaml编写service-kube-proxy"}},[e._v("#")]),e._v(" 实战：如何用yaml编写service，kube-proxy")]),e._v(" "),s("p",[e._v("首先用命令 "),s("code",[e._v("kubectl api-resources")]),e._v(" 查看它们的基本信息")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("kubectl api-resources "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" services \n")])])]),s("p",[e._v("打印结果")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root@master deployment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# kubectl api-resources | grep services")]),e._v("\nservices      svc      v1      "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("      Service\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);