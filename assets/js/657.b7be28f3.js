(window.webpackJsonp=window.webpackJsonp||[]).push([[657],{972:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"xz"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xz"}},[a._v("#")]),a._v(" xz")]),a._v(" "),t("p",[a._v("POSIX 平台开发具有高压缩率的工具")]),a._v(" "),t("h2",{attrs:{id:"补充说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[a._v("#")]),a._v(" 补充说明")]),a._v(" "),t("p",[t("strong",[a._v("xz命令")]),a._v(" XZ Utils 是为 POSIX 平台开发具有高压缩率的工具。它使用 LZMA2 压缩算法，生成的压缩文件比 POSIX 平台传统使用的 gzip、bzip2 生成的压缩文件更小，而且解压缩速度也很快。最初 XZ Utils 的是基于 LZMA-SDK 开发，但是 LZMA-SDK 包含了一些 WINDOWS 平台的特性，所以 XZ Utils 为以适应 POSIX 平台作了大幅的修改。XZ Utils 的出现也是为了取代 POSIX 系统中旧的 LZMA Utils。")]),a._v(" "),t("h3",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("xz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("参数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nxz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("OPTION"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("FILE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("h3",{attrs:{id:"选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("-z, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--compress")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制压缩")]),a._v("\n-d, --decompress, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--uncompress")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# force decompression")]),a._v("\n-t, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--test")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 测试压缩文件的完整性")]),a._v("\n-l, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出有关.xz文件的信息")]),a._v("\n-k, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--keep")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 保留（不要删除）输入文件")]),a._v("\n-f, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--force")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制覆盖输出文件和（解）压缩链接")]),a._v("\n-c, --stdout, --to-stdout\n                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 写入标准输出，不要删除输入文件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-9")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 压缩预设; 默认为6; 取压缩机*和*")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用7-9之前解压缩内存使用量考虑在内！")]),a._v("\n-e, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--extreme")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 尝试通过使用更多的CPU时间来提高压缩比;")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 要求不影响解压缩存储器")]),a._v("\n-T, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--threads")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("NUM "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最多使用NUM个线程; 默认值为1;  set to 0")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置为0，使用与处理器内核一样多的线程")]),a._v("\n-q, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--quiet")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 抑制警告; 指定两次以抑制错误")]),a._v("\n-v, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 冗长; 指定两次更详细")]),a._v("\n-h, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示这个简洁的帮助并退出")]),a._v("\n-H, --long-help   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示更多帮助（还列出了高级选项）")]),a._v("\n-V, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示版本号并退出")]),a._v("\n")])])]),t("h3",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),t("ul",[t("li",[a._v("源文件：指定连接的源文件。")]),a._v(" "),t("li",[a._v("目标文件：指定源文件的目标连接文件。")])]),a._v(" "),t("h3",{attrs:{id:"实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[a._v("#")]),a._v(" 实例")]),a._v(" "),t("p",[a._v("压缩一个文件 test.txt，压缩成功后生成 test.txt.xz, 原文件会被删除。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ xz test.txt\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" test.txt*\n\ntest.txt.xz\n")])])]),t("p",[a._v("解压 test.txt.xz 文件，并使用参数 -k 保持原文件不被删除")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ xz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" test.txt.xz\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" test.txt*\n\ntest.txt.xz test.txt\n")])])]),t("p",[a._v("使用参数 -l 显示 .xz 文件的基本信息。基本信息包括压缩率、数据完整性验证方式等。也可以和参数 -v 或 -vv 配合显示更详尽的信息。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("xz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" index.txt.xz\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Strms  Blocks   Compressed Uncompressed  Ratio  Check   Filename")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#    1       1        768 B      1,240 B  0.619  CRC64   index.txt.")]),a._v("\n")])])]),t("p",[a._v("使用参数 -0, -1, -2, … -6, … -9 或参数 --fast, --best 设定压缩率。xz 命令的默认为 -6 ，对于大多数系统来说，甚至是一些较旧的系统，-4 … -6 压缩率预设值都不错的表现。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ xz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k7")]),a._v(" xz_pipe_decomp_mini.c\n$ xz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-k")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--fast")]),a._v(" xz_pipe_decomp_mini.c\n")])])]),t("p",[a._v("使用参数 -H 显示 xz 命令所有 options. 参数 -H 比使用参数 --help 显示的内容更详细。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("$ xz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("more")]),a._v("\n")])])]),t("p",[a._v("借助 xargs 命令并行压缩多文件。下面的命令行可以将 /var/log 目录下所有的扩展名为 .log 的文件压缩。通过 xargs 命令同时运行多个 xz 进行压缩。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行此命令须有 root 权限。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /var/log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.log"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P4")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n16")]),a._v(" xz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-T1")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);