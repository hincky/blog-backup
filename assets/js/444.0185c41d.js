(window.webpackJsonp=window.webpackJsonp||[]).push([[444],{755:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"pigz"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pigz"}},[a._v("#")]),a._v(" pigz")]),a._v(" "),t("p",[a._v("可以用来解压缩文件，gzip的并行实现升级版")]),a._v(" "),t("h2",{attrs:{id:"补充说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[a._v("#")]),a._v(" 补充说明")]),a._v(" "),t("p",[t("strong",[a._v("pigz命令")]),a._v("可以用来解压缩文件，最重要的是支持多线程并行处理，解压缩比gzip快。主页: "),t("a",{attrs:{href:"http://zlib.net/pigz/",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://zlib.net/pigz/"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("pigz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" -cdfhikKlLmMnNqrRtz0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9,11")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" blocksize "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" threads "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" suffix "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nunpigz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cfhikKlLmMnNqrRtz")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-b")]),a._v(" blocksize "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" threads "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" suffix "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("h3",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-0")]),a._v(" to -9, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-11")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Compression level (level 11, zopfli, is much slower)")]),a._v("\n--fast, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--best")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Compression levels 1 and 9 respectively")]),a._v("\n-b, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--blocksize")]),a._v(" mmm "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Set compression block size to mmmK (default 128K)")]),a._v("\n-c, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--stdout")]),a._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Write all processed output to stdout (won't delete)")]),a._v("\n-d, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--decompress")]),a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Decompress the compressed input")]),a._v("\n-f, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--force")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Force overwrite, compress .gz, links, and to terminal")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-F")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--first")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Do iterations first, before block split for -11")]),a._v("\n-h, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Display a help screen and quit")]),a._v("\n-i, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--independent")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Compress blocks independently for damage recovery")]),a._v("\n-I, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--iterations")]),a._v(" n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Number of iterations for -11 optimization")]),a._v("\n-J, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--maxsplits")]),a._v(" n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Maximum number of split blocks for -11")]),a._v("\n-k, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--keep")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Do not delete original file after processing")]),a._v("\n-K, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zip")]),a._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Compress to PKWare zip (.zip) single entry format")]),a._v("\n-l, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--list")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# List the contents of the compressed input")]),a._v("\n-L, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--license")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Display the pigz license and quit")]),a._v("\n-m, --no-time       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Do not store or restore mod time")]),a._v("\n-M, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--time")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Store or restore mod time")]),a._v("\n-n, --no-name       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Do not store or restore file name or mod time")]),a._v("\n-N, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Store or restore file name and mod time")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--oneblock")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Do not split into smaller blocks for -11")]),a._v("\n-p, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--processes")]),a._v(" n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Allow up to n compression threads (default is the number of online processors, or 8 if unknown)")]),a._v("\n-q, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--quiet")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Print no messages, even on error")]),a._v("\n-r, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--recursive")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Process the contents of all subdirectories")]),a._v("\n-R, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rsyncable")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Input-determined block locations for rsync")]),a._v("\n-S, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--suffix")]),a._v(" .sss   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Use suffix .sss instead of .gz (for compression)")]),a._v("\n-t, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--test")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Test the integrity of the compressed input")]),a._v("\n-v, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--verbose")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Provide more verbose output")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-V")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Show the version of pigz")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Y")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--synchronous")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Force output file write to permanent storage")]),a._v("\n-z, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zlib")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Compress to zlib (.zz) instead of gzip format")]),a._v("\n--                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# All arguments after "--" are treated as files')]),a._v("\n")])])]),t("h3",{attrs:{id:"实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[a._v("#")]),a._v(" 实例")]),a._v(" "),t("p",[a._v("可以结合"),t("code",[a._v("tar")]),a._v("使用, 压缩命令")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cvf")]),a._v(" - dir1 dir2 dir3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" pigz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" output.tgz\n")])])]),t("p",[a._v("解压命令")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("pigz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" output.tgz\n")])])]),t("p",[a._v("如果是gzip格式，也支持用tar解压")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-xzvf")]),a._v(" output.tgz\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);