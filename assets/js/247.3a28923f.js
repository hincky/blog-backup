(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{560:function(s,a,t){"use strict";t.r(a);var e=t(14),v=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"gcc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gcc"}},[s._v("#")]),s._v(" gcc")]),s._v(" "),a("p",[s._v("基于C/C++的编译器")]),s._v(" "),a("h2",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[s._v("#")]),s._v(" 补充说明")]),s._v(" "),a("p",[a("strong",[s._v("gcc命令")]),s._v(" 使用GNU推出的基于 "),a("code",[s._v("C/C++")]),s._v(" 的编译器，是开放源代码领域应用最广泛的编译器，具有功能强大，编译代码支持性能优化等特点。现在很多程序员都应用 "),a("code",[s._v("GCC")]),s._v("，怎样才能更好的应用 "),a("code",[s._v("GCC")]),s._v("。目前，"),a("code",[s._v("GCC")]),s._v(" 可以用来编译 "),a("code",[s._v("C/C++")]),s._v("、"),a("code",[s._v("FORTRAN")]),s._v("、"),a("code",[s._v("JAVA")]),s._v("、"),a("code",[s._v("OBJC")]),s._v("、"),a("code",[s._v("ADA")]),s._v("等语言的程序，可根据需要选择安装支持的语言。")]),s._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("选项"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[s._v("#")]),s._v(" 选项")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("-o：指定生成的输出文件；\n-E：仅执行编译预处理；\n-S：将C代码转换为汇编代码；\n-wall：显示警告信息；\n-c：仅执行编译操作，不进行连接操作。\n-l：用来指定程序要链接的库，-l参数紧接着就是库名\n-I：寻找头文件的目录\n")])])]),a("h3",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[s._v("#")]),s._v(" 参数")]),s._v(" "),a("p",[s._v("C源文件：指定C语言源代码文件。")]),s._v(" "),a("h3",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[s._v("#")]),s._v(" 实例")]),s._v(" "),a("p",[a("strong",[s._v("常用编译命令选项")])]),s._v(" "),a("p",[s._v("假设源程序文件名为test.c")]),s._v(" "),a("p",[a("strong",[s._v("无选项编译链接")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc test.c\n")])])]),a("p",[s._v("将 "),a("code",[s._v("test.c")]),s._v(" 预处理、汇编、编译并链接形成可执行文件。这里未指定输出文件，默认输出为 "),a("code",[s._v("a.out")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("选项 -o")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc test.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])]),a("p",[s._v("将 "),a("code",[s._v("test.c")]),s._v(" 预处理、汇编、编译并链接形成可执行文件 "),a("code",[s._v("test")]),s._v("。"),a("code",[s._v("-o")]),s._v(" 选项用来指定输出文件的文件名。")]),s._v(" "),a("p",[a("strong",[s._v("选项 -E")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" test.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" test.i\n")])])]),a("p",[s._v("将 "),a("code",[s._v("test.c")]),s._v(" 预处理输出 "),a("code",[s._v("test.i")]),s._v(" 文件。")]),s._v(" "),a("p",[a("strong",[s._v("选项 -S")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-S")]),s._v(" test.i\n")])])]),a("p",[s._v("将预处理输出文件 "),a("code",[s._v("test.i")]),s._v(" 汇编成 "),a("code",[s._v("test.s")]),s._v(" 文件。")]),s._v(" "),a("p",[a("strong",[s._v("选项 -c")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" test.s\n")])])]),a("p",[s._v("将汇编输出文件 "),a("code",[s._v("test.s")]),s._v(" 编译输出 "),a("code",[s._v("test.o")]),s._v(" 文件。")]),s._v(" "),a("p",[a("strong",[s._v("无选项链接")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc test.o "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])]),a("p",[s._v("将编译输出文件 "),a("code",[s._v("test.o")]),s._v(" 链接成最终可执行文件 "),a("code",[s._v("test")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("选项 -O")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-O1")]),s._v(" test.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])]),a("p",[s._v("使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长。")]),s._v(" "),a("p",[a("strong",[s._v("多源文件的编译方法")])]),s._v(" "),a("p",[s._v("如果有多个源文件，基本上有两种编译方法：")]),s._v(" "),a("p",[s._v("假设有两个源文件为 "),a("code",[s._v("test.c")]),s._v(" 和 "),a("code",[s._v("testfun.c")])]),s._v(" "),a("p",[a("strong",[s._v("多个文件一起编译")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc testfun.c test.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])]),a("p",[s._v("将 "),a("code",[s._v("testfun.c")]),s._v(" 和 "),a("code",[s._v("test.c")]),s._v(" 分别编译后链接成 "),a("code",[s._v("test")]),s._v(" 可执行文件。")]),s._v(" "),a("p",[a("strong",[s._v("分别编译各个源文件，之后对编译后输出的目标文件链接。")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" testfun.c    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将testfun.c编译成testfun.o")]),s._v("\ngcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" test.c       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将test.c编译成test.o")]),s._v("\ngcc testfun.o test.o "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将testfun.o和test.o链接成test")]),s._v("\n")])])]),a("p",[s._v("以上两种方法相比较，第一中方法编译时需要所有文件重新编译，而第二种方法可以只重新编译修改的文件，未修改的文件不用重新编译。")]),s._v(" "),a("p",[a("strong",[s._v("加载动态链接库")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc hello.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lpthread")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" hello\n")])])]),a("p",[a("strong",[s._v("手动添加文件头路径")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("gcc hello.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lpthread")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-I")]),s._v(" /lib64/ "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" hello\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);