(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{542:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"find"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[a._v("#")]),a._v(" find")]),a._v(" "),s("p",[a._v("在指定目录下查找文件")]),a._v(" "),s("h2",{attrs:{id:"补充说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[a._v("#")]),a._v(" 补充说明")]),a._v(" "),s("p",[s("strong",[a._v("find命令")]),a._v(" 用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。")]),a._v(" "),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("find"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("选项"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("参数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h3",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("-amin"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("分钟"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找在指定时间曾被存取过的文件或目录，单位以分钟计算；\n-anewer"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("参考文件或目录"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找其存取时间较指定文件或目录的存取时间更接近现在的文件或目录；\n-atime"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("24")]),a._v("小时数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找在指定时间曾被存取过的文件或目录，单位以24小时计算；\n-cmin"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("分钟"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找在指定时间之时被更改过的文件或目录；\n-cnewer"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("参考文件或目录"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录；\n-ctime"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("24")]),a._v("小时数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找在指定时间之时被更改的文件或目录，单位以24小时计算；\n-daystart：从本日开始计算时间；\n-depth：从指定目录下最深层的子目录开始查找；\n-empty：寻找文件大小为0 Byte的文件，或目录下没有任何子目录或文件的空目录；\n-exec"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("执行指令"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：假设find指令的回传值为True，就执行该指令；\n-false：将find指令的回传值皆设为False；\n-fls"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("列表文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-ls”参数类似，但会把结果保存为指定的列表文件；\n-follow：排除符号连接；\n-fprint"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("列表文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-print”参数类似，但会把结果保存成指定的列表文件；\n-fprint"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("0")]),a._v("<")]),a._v("列表文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-print0”参数类似，但会把结果保存成指定的列表文件；\n-fprintf"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("列表文件"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("输出格式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-printf”参数类似，但会把结果保存成指定的列表文件；\n-fstype"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("文件系统类型"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：只寻找该文件系统类型下的文件或目录；\n-gid"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("群组识别码"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找符合指定之群组识别码的文件或目录；\n-group"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("群组名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找符合指定之群组名称的文件或目录；\n-help或--help：在线帮助；\n-ilname"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-lname”参数类似，但忽略字符大小写的差别；\n-iname"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-name”参数类似，但忽略字符大小写的差别；\n-inum"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("inode编号"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找符合指定的inode编号的文件或目录；\n-ipath"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-path”参数类似，但忽略字符大小写的差别；\n-iregex"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-regexe”参数类似，但忽略字符大小写的差别；\n-links"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("连接数目"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找符合指定的硬连接数目的文件或目录；\n-lname"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：指定字符串作为寻找符号连接的范本样式；\n-ls：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出；\n-maxdepth"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("目录层级"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：设置最大目录层级；\n-mindepth"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("目录层级"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：设置最小目录层级；\n-mmin"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("分钟"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找在指定时间曾被更改过的文件或目录，单位以分钟计算；\n-mount：此参数的效果和指定“-xdev”相同；\n-mtime"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("24")]),a._v("小时数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找在指定时间曾被更改过的文件或目录，单位以24小时计算；\n-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：指定字符串作为寻找文件或目录的范本样式；\n-newer"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("参考文件或目录"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录；\n-nogroup：找出不属于本地主机群组识别码的文件或目录；\n-noleaf：不去考虑目录至少需拥有两个硬连接存在；\n-nouser：找出不属于本地主机用户识别码的文件或目录；\n-ok"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("执行指令"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-exec”类似，但在执行指令之前会先询问用户，若回答“y”或“Y”，则放弃执行命令；\n-path"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：指定字符串作为寻找目录的范本样式；\n-perm"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("权限数值"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找符合指定的权限数值的文件或目录；\n-print：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式为每列一个名称，每个名称前皆有“./”字符串；\n-print0：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式为全部的名称皆在同一行；\n-printf"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("输出格式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式可以自行指定；\n-prune：不寻找字符串作为寻找文件或目录的范本样式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n-regex"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("范本样式"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：指定字符串作为寻找文件或目录的范本样式；\n-size"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("文件大小"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找符合指定的文件大小的文件；\n-true：将find指令的回传值皆设为True；\n-type"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("文件类型"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：只寻找符合指定的文件类型的文件；\n-uid"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("用户识别码"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找符合指定的用户识别码的文件或目录；\n-used"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("日数"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找文件或目录被更改之后在指定时间曾被存取过的文件或目录，单位以日计算；\n-user"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("拥有者名称"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：查找符和指定的拥有者名称的文件或目录；\n-version或——version：显示版本信息；\n-xdev：将范围局限在先行的文件系统中；\n-xtype"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("文件类型"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：此参数的效果和指定“-type”参数类似，差别在于它针对符号连接检查。\n")])])]),s("h3",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),s("p",[a._v("起始目录：查找文件的起始目录。")]),a._v(" "),s("h3",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[a._v("#")]),a._v(" 实例")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录搜索所有文件，文件内容 包含 “140.206.111.111” 的内容")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"140.206.111.111"')]),a._v("\n")])])]),s("h4",{attrs:{id:"根据文件或者正则表达式进行匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#根据文件或者正则表达式进行匹配"}},[a._v("#")]),a._v(" 根据文件或者正则表达式进行匹配")]),a._v(" "),s("p",[a._v("列出当前目录及子目录下所有文件和文件夹")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),s("p",[a._v("在"),s("code",[a._v("/home")]),a._v("目录下查找以.txt结尾的文件名")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /home "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v("\n")])])]),s("p",[a._v("同上，但忽略大小写")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /home "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v("\n")])])]),s("p",[a._v("当前目录及子目录下查找所有以.txt和.pdf结尾的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.pdf"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n或\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.pdf"')]),a._v("\n")])])]),s("p",[a._v("匹配文件路径或者文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /usr/ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*local*"')]),a._v("\n")])])]),s("p",[a._v("基于正则表达式匹配文件路径")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-regex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".*\\(\\.txt\\|\\.pdf\\)$"')]),a._v("\n")])])]),s("p",[a._v("同上，但忽略大小写")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iregex")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".*\\(\\.txt\\|\\.pdf\\)$"')]),a._v("\n")])])]),s("h4",{attrs:{id:"否定参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#否定参数"}},[a._v("#")]),a._v(" 否定参数")]),a._v(" "),s("p",[a._v("找出/home下不是以.txt结尾的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /home "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v("\n")])])]),s("h4",{attrs:{id:"根据文件类型进行搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#根据文件类型进行搜索"}},[a._v("#")]),a._v(" 根据文件类型进行搜索")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" 类型参数\n")])])]),s("p",[a._v("类型参数列表：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("f")]),a._v("  普通文件")]),a._v(" "),s("li",[s("strong",[a._v("l")]),a._v("  符号连接")]),a._v(" "),s("li",[s("strong",[a._v("d")]),a._v("  目录")]),a._v(" "),s("li",[s("strong",[a._v("c")]),a._v("  字符设备")]),a._v(" "),s("li",[s("strong",[a._v("b")]),a._v("  块设备")]),a._v(" "),s("li",[s("strong",[a._v("s")]),a._v("  套接字")]),a._v(" "),s("li",[s("strong",[a._v("p")]),a._v("  Fifo")])]),a._v(" "),s("h4",{attrs:{id:"基于目录深度搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于目录深度搜索"}},[a._v("#")]),a._v(" 基于目录深度搜索")]),a._v(" "),s("p",[a._v("向下最大深度限制为3")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-maxdepth")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f\n")])])]),s("p",[a._v("搜索出深度距离当前目录至少2个子目录的所有文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mindepth")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f\n")])])]),s("h4",{attrs:{id:"根据文件时间戳进行搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#根据文件时间戳进行搜索"}},[a._v("#")]),a._v(" 根据文件时间戳进行搜索")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f 时间戳\n")])])]),s("p",[a._v("UNIX/Linux文件系统每个文件都有三种时间戳：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("访问时间")]),a._v(" （-atime/天，-amin/分钟）：用户最近一次访问时间。")]),a._v(" "),s("li",[s("strong",[a._v("修改时间")]),a._v(" （-mtime/天，-mmin/分钟）：文件最后一次修改时间。")]),a._v(" "),s("li",[s("strong",[a._v("变化时间")]),a._v(" （-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间。")])]),a._v(" "),s("p",[a._v("搜索最近七天内被访问过的所有文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-atime")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-7")]),a._v("\n")])])]),s("p",[a._v("搜索恰好在七天前被访问过的所有文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-atime")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("\n")])])]),s("p",[a._v("搜索超过七天内被访问过的所有文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-atime")]),a._v(" +7\n")])])]),s("p",[a._v("搜索访问时间超过10分钟的所有文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-amin")]),a._v(" +10\n")])])]),s("p",[a._v("找出比file.log修改时间更长的所有文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-newer")]),a._v(" file.log\n")])])]),s("h4",{attrs:{id:"根据文件大小进行匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#根据文件大小进行匹配"}},[a._v("#")]),a._v(" 根据文件大小进行匹配")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" 文件大小单元\n")])])]),s("p",[a._v("文件大小单元：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("b")]),a._v("  —— 块（512字节）")]),a._v(" "),s("li",[s("strong",[a._v("c")]),a._v("  —— 字节")]),a._v(" "),s("li",[s("strong",[a._v("w")]),a._v("  —— 字（2字节）")]),a._v(" "),s("li",[s("strong",[a._v("k")]),a._v("  —— 千字节")]),a._v(" "),s("li",[s("strong",[a._v("M")]),a._v("  —— 兆字节")]),a._v(" "),s("li",[s("strong",[a._v("G")]),a._v("  —— 吉字节")])]),a._v(" "),s("p",[a._v("搜索大于10KB的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" +10k\n")])])]),s("p",[a._v("搜索小于10KB的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-10k")]),a._v("\n")])])]),s("p",[a._v("搜索等于10KB的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" 10k\n")])])]),s("h4",{attrs:{id:"删除匹配文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除匹配文件"}},[a._v("#")]),a._v(" 删除匹配文件")]),a._v(" "),s("p",[a._v("删除当前目录下所有.txt文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-delete")]),a._v("\n")])])]),s("h4",{attrs:{id:"根据文件权限-所有权进行匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#根据文件权限-所有权进行匹配"}},[a._v("#")]),a._v(" 根据文件权限/所有权进行匹配")]),a._v(" "),s("p",[a._v("当前目录下搜索出权限为777的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("777")]),a._v("\n")])])]),s("p",[a._v("找出当前目录下权限不是644的php文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.php"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("644")]),a._v("\n")])])]),s("p",[a._v("找出当前目录用户tom拥有的所有文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-user")]),a._v(" tom\n")])])]),s("p",[a._v("找出当前目录用户组sunk拥有的所有文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-group")]),a._v(" sunk\n")])])]),s("h4",{attrs:{id:"借助-exec选项与其他命令结合使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#借助-exec选项与其他命令结合使用"}},[a._v("#")]),a._v(" 借助"),s("code",[a._v("-exec")]),a._v("选项与其他命令结合使用")]),a._v(" "),s("p",[a._v("找出当前目录下所有root的文件，并把所有权更改为用户tom")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" .-type f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-user")]),a._v(" root "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chown")]),a._v(" tom "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("上例中， "),s("strong",[a._v("{}")]),a._v("  用于与 "),s("strong",[a._v("-exec")]),a._v(" 选项结合使用来匹配所有文件，然后会被替换为相应的文件名。")]),a._v(" "),s("p",[a._v("找出自己家目录下所有的.txt文件并删除")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/. "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ok")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("上例中， "),s("strong",[a._v("-ok")]),a._v(" 和 "),s("strong",[a._v("-exec")]),a._v(" 行为一样，不过它会给出提示，是否执行相应的操作。")]),a._v(" "),s("p",[a._v("查找当前目录下所有.txt文件并把他们拼接起来写入到all.txt文件中")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /all.txt\n")])])]),s("p",[a._v("将30天前的.log文件移动到old目录中")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mtime")]),a._v(" +30 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.log"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" old "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("找出当前目录下所有.txt文件并以“File:文件名”的形式打印出来")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("printf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"File: %s'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("因为单行命令中-exec参数中无法使用多个命令，以下方法可以实现在-exec之后接受多条命令")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" ./text.sh "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"搜索但跳过指定的目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搜索但跳过指定的目录"}},[a._v("#")]),a._v(" 搜索但跳过指定的目录")]),a._v(" "),s("p",[a._v("查找当前目录或者子目录下所有.txt文件，但是跳过子目录sk")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./sk"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-prune")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("⚠️ ./sk 不能写成 ./sk/ ，否则没有作用。")])]),a._v(" "),s("p",[a._v("忽略两个目录")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" ./sk "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-path")]),a._v(" ./st "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-prune")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.txt"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-print")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("⚠️ 如果写相对路径必须加上"),s("code",[a._v("./")])])]),a._v(" "),s("h4",{attrs:{id:"find其他技巧收集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find其他技巧收集"}},[a._v("#")]),a._v(" find其他技巧收集")]),a._v(" "),s("p",[a._v("要列出所有长度为零的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-empty")]),a._v("\n")])])]),s("h4",{attrs:{id:"其它实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它实例"}},[a._v("#")]),a._v(" 其它实例")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*jpg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 主目录中找到所有的 jpg 文件。 -name 参数允许你将结果限制为与给定模式匹配的文件。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*jpg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -iname 就像 -name，但是不区分大小写")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'jpeg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'jpg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 一些图片可能是 .jpeg 扩展名。幸运的是，我们可以将模式用“或”（表示为 -o）来组合。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*jpeg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*jpg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果你有一些以 jpg 结尾的目录呢？ （为什么你要命名一个 bucketofjpg 而不是 pictures 的目录就超出了本文的范围。）我们使用 -type 参数修改我们的命令来查找文件。")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*jpeg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*jpg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" d "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 也许你想找到那些命名奇怪的目录，以便稍后重命名它们")]),a._v("\n")])])]),s("p",[a._v("最近拍了很多照片，所以让我们把它缩小到上周更改的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*jpeg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-iname")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'*jpg'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-type")]),a._v(" f "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-mtime")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-7")]),a._v("\n")])])]),s("p",[a._v("你可以根据文件状态更改时间 （ctime）、修改时间 （mtime） 或访问时间 （atime） 来执行时间过滤。 这些是在几天内，所以如果你想要更细粒度的控制，你可以表示为在几分钟内（分别是 cmin、mmin 和 amin）。 除非你确切地知道你想要的时间，否则你可能会在 + （大于）或 - （小于）的后面加上数字。")]),a._v(" "),s("p",[a._v("但也许你不关心你的照片。也许你的磁盘空间不够用，所以你想在 log 目录下找到所有巨大的（让我们定义为“大于 1GB”）文件：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /var/log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-size")]),a._v(" +1G\n")])])]),s("p",[a._v("或者，也许你想在 /data 中找到 bcotton 拥有的所有文件：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" /data "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-owner")]),a._v(" bcotton\n")])])]),s("p",[a._v("你还可以根据权限查找文件。也许你想在你的主目录中找到对所有人可读的文件，以确保你不会过度分享。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ~ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-perm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("r\n")])])]),s("p",[a._v("删除 mac 下自动生成的文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" ./ "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'__MACOSX'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-depth")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("统计代码行数")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("find")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-name")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"*.java"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" ^$"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 代码行数统计, 排除空行")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);