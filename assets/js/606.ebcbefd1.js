(window.webpackJsonp=window.webpackJsonp||[]).push([[606],{920:function(a,t,s){"use strict";s.r(t);var e=s(14),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"uniq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uniq"}},[a._v("#")]),a._v(" uniq")]),a._v(" "),t("p",[a._v("显示或忽略重复的行。")]),a._v(" "),t("h2",{attrs:{id:"概要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[a._v("#")]),a._v(" 概要")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("OPTION"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("INPUT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("OUTPUT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("h2",{attrs:{id:"主要用途"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要用途"}},[a._v("#")]),a._v(" 主要用途")]),a._v(" "),t("ul",[t("li",[a._v("将输入文件（或标准输入）中邻近的重复行写入到输出文件（或标准输出）中。")]),a._v(" "),t("li",[a._v("当没有选项时，邻近的重复行将合并为一个。")])]),a._v(" "),t("h2",{attrs:{id:"选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[a._v("#")]),a._v(" 选项")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("-c, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--count")]),a._v("                在每行开头增加重复次数。\n-d, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--repeated")]),a._v("             所有邻近的重复行只被打印一次。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-D")]),a._v("                         所有邻近的重复行将全部打印。\n--all-repeated"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("METHOD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("    类似于 -D，但允许每组之间以空行分割。METHOD取值范围"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("none"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("，prepend，separate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("。\n-f, --skip-fields"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("N        跳过对前N个列的比较。\n--group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("METHOD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("           显示所有行，允许每组之间以空行分割。METHOD取值范围："),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("separate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("默认"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("，prepend，append，both"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("。\n-i, --ignore-case          忽略大小写的差异。\n-s, --skip-chars"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("N         跳过对前N个字符的比较。\n-u, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--unique")]),a._v("               只打印非邻近的重复行。\n-z, --zero-terminated      设置行终止符为NUL（空），而不是换行符。\n-w, --check-chars"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("N        只对每行前N个字符进行比较。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--help")]),a._v("                     显示帮助信息并退出。\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v("                  显示版本信息并退出。\n")])])]),t("h2",{attrs:{id:"参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[a._v("#")]),a._v(" 参数")]),a._v(" "),t("p",[a._v("INPUT（可选）：输入文件，不提供时为标准输入。")]),a._v(" "),t("p",[a._v("OUTPUT（可选）：输出文件，不提供时为标准输出。")]),a._v(" "),t("h2",{attrs:{id:"返回值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[a._v("#")]),a._v(" 返回值")]),a._v(" "),t("p",[a._v("返回0表示成功，返回非0值表示失败。")]),a._v(" "),t("h2",{attrs:{id:"例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[a._v("#")]),a._v(" 例子")]),a._v(" "),t("p",[a._v("注意：命令2和命令3结果一样，命令1仅作了相邻行的去重。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" file.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" file.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" file.txt\n")])])]),t("p",[a._v("只显示单一行，区别在于是否执行排序：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" file.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" file.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v("\n")])])]),t("p",[a._v("统计各行在文件中出现的次数：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" file.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v("\n")])])]),t("p",[a._v("在文件中找出重复的行：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" file.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uniq")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v("\n")])])]),t("h3",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[a._v("#")]),a._v(" 注意")]),a._v(" "),t("ol",[t("li",[t("p",[t("code",[a._v("uniq")]),a._v("只检测邻近的行是否重复，"),t("code",[a._v("sort -u")]),a._v("将输入文件先排序然后再处理重复行。")])]),a._v(" "),t("li",[t("p",[a._v("该命令是"),t("code",[a._v("GNU coreutils")]),a._v("包中的命令，相关的帮助信息请查看"),t("code",[a._v("man -s 1 uniq")]),a._v("，"),t("code",[a._v("info coreutils 'uniq invocation'")]),a._v("。")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);