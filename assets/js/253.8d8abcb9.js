(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{566:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),s("p",[t._v("是目前世界上最先进的分布式版本控制系统")]),t._v(" "),s("h2",{attrs:{id:"补充说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[t._v("#")]),t._v(" 补充说明")]),t._v(" "),s("p",[s("strong",[t._v("git命令")]),t._v(" 很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。")]),t._v(" "),s("p",[t._v("Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？")]),t._v(" "),s("p",[t._v("事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！")]),t._v(" "),s("p",[t._v("你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。")]),t._v(" "),s("p",[t._v("不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。")]),t._v(" "),s("p",[t._v("安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。")]),t._v(" "),s("p",[t._v("Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：")]),t._v(" "),s("p",[t._v("Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。")]),t._v(" "),s("p",[t._v("Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。")]),t._v(" "),s("p",[t._v("历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/jaywcjlove/handbook/blob/master/other/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B8%85%E5%8D%95.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git常用命令清单"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--help"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-C "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-c "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--exec-path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--html-path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--man-path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--info-path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--paginate")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" --no-pager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--no-replace-objects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--bare"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--git-dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--work-tree"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--namespace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项"}},[t._v("#")]),t._v(" 选项")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("              将文件内容添加到索引\nbisect           通过二进制查找引入错误的更改\nbranch           列出，创建或删除分支\ncheckout         检查分支或路径到工作树\nclone            将存储库克隆到新目录中\ncommit           将更改记录到存储库\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("             显示提交，提交和工作树等之间的更改\nfetch            从另一个存储库下载对象和引用\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v("             打印匹配图案的行\ninit             创建一个空的Git仓库或重新初始化一个现有的\nlog              显示提交日志\nmerge            加入两个或更多的开发历史\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v("               移动或重命名文件，目录或符号链接\npull             从另一个存储库或本地分支获取并合并\npush             更新远程引用以及相关对象\nrebase           转发端口本地提交到更新的上游头\nreset            将当前HEAD复位到指定状态\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v("               从工作树和索引中删除文件\nshow             显示各种类型的对象\nstatus           显示工作树状态\ntag              创建，列出，删除或验证使用GPG签名的标签对象\n")])])]),s("h3",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),s("p",[t._v("init")]),t._v(" "),s("p",[s("code",[t._v("git init")]),t._v(" #初始化")]),t._v(" "),s("p",[t._v("status")]),t._v(" "),s("p",[s("code",[t._v("git status")]),t._v(" #获取状态")]),t._v(" "),s("p",[t._v("add")]),t._v(" "),s("p",[s("code",[t._v("git add file")]),t._v(" # .或*代表全部添加"),s("br"),t._v(" "),s("code",[t._v("git rm --cached <added_file_to_undo>")]),t._v(" # 在commit之前撤销git add操作"),s("br"),t._v(" "),s("code",[t._v("git reset head")]),t._v(" # 好像比上面"),s("code",[t._v("git rm --cached")]),t._v("更方便")]),t._v(" "),s("p",[t._v("commit")]),t._v(" "),s("p",[s("code",[t._v('git commit -m "message"')]),t._v(" #此处注意乱码")]),t._v(" "),s("p",[t._v("remote")]),t._v(" "),s("p",[s("code",[t._v("git remote add origin git@github.com:JSLite/test.git")]),t._v(" #添加源")]),t._v(" "),s("p",[t._v("push")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# push同事设置默认跟踪分支  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制推送文件，缩写 -f（全写--force）")]),t._v("\n")])])]),s("p",[t._v("clone")]),t._v(" "),s("p",[s("code",[t._v("git clone git://github.com/JSLite/JSLite.js.git")]),s("br"),t._v(" "),s("code",[t._v("git clone git://github.com/JSLite/JSLite.js.git mypro")]),t._v(" #克隆到自定义文件夹"),s("br"),t._v(" "),s("code",[t._v("git clone [user@]example.com:path/to/repo.git/")]),t._v(" #SSH协议还有另一种写法。")]),t._v(" "),s("p",[t._v("git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。"),s("code",[t._v("git clone <版本库的网址> <本地目录名>")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("://example.com/path/to/repo.git/\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone ssh://example.com/path/to/repo.git/\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git://example.com/path/to/repo.git/\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone /opt/git/project.git \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone file:///opt/git/project.git\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone ftp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("://example.com/path/to/repo.git/\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone rsync://example.com/path/to/repo.git/\n")])])]),s("h2",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("首先是配置帐号信息 "),s("code",[t._v("ssh -T git@github.com")]),t._v(" 测试。")]),t._v(" "),s("h2",{attrs:{id:"修改项目中的个人信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改项目中的个人信息"}},[t._v("#")]),t._v(" 修改项目中的个人信息")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取帮助信息，查看修改个人信息的参数  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" user.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小弟调调"')]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改全局名字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" user.email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wowohoo@qq.com"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改全局邮箱")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--list")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看配置的信息  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"配置自动换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置自动换行"}},[t._v("#")]),t._v(" 配置自动换行")]),t._v(" "),s("p",[t._v("自动转换坑太大，提交到git是自动将换行符转换为lf")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" core.autocrlf input\n")])])]),s("h2",{attrs:{id:"常见使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见使用场景"}},[t._v("#")]),t._v(" 常见使用场景")]),t._v(" "),s("h3",{attrs:{id:"创建ssh密钥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建ssh密钥"}},[t._v("#")]),t._v(" 创建SSH密钥")]),t._v(" "),s("p",[t._v("这个密钥用来跟 github 通信，在本地终端里生成然后上传到 github")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("ssh-keygen "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" rsa "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-C")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wowohoo@qq.com'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成密钥  ")]),t._v("\nssh-keygen "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" rsa "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-C")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wowohoo@qq.com"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" ~/.ssh/ww_rsa "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定生成目录文件名字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-T")]),t._v(" git@github.com "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试是否成功  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"多账号ssh配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多账号ssh配置"}},[t._v("#")]),t._v(" 多账号ssh配置")]),t._v(" "),s("p",[s("strong",[t._v("1.生成指定名字的密钥")])]),t._v(" "),s("p",[s("code",[t._v('ssh-keygen -t rsa -C "邮箱地址" -f ~/.ssh/jslite_rsa')]),s("br"),t._v("\n会生成 "),s("code",[t._v("jslite_rsa")]),t._v(" 和 "),s("code",[t._v("jslite_rsa.pub")]),t._v(" 这两个文件")]),t._v(" "),s("p",[s("strong",[t._v("2.密钥复制到托管平台上")])]),t._v(" "),s("p",[s("code",[t._v("vim ~/.ssh/jslite_rsa.pub")]),s("br"),t._v("\n打开公钥文件 "),s("code",[t._v("jslite_rsa.pub")]),t._v(" ，并把内容复制至代码托管平台上")]),t._v(" "),s("p",[s("strong",[t._v("3.修改config文件")])]),t._v(" "),s("p",[s("code",[t._v("vim ~/.ssh/config")]),t._v(" #修改config文件，如果没有创建 "),s("code",[t._v("config")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Host jslite.github.com\n  HostName github.com\n  User "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n  IdentityFile ~/.ssh/jslite_rsa\n\nHost work.github.com\n  HostName github.com\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Port 服务器open-ssh端口（默认：22,默认时一般不写此行）")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# PreferredAuthentications 配置登录时用什么权限认证 ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                          publickey|password publickey|keyboard-interactive等")]),t._v("\n  User "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n  IdentityFile ~/.ssh/work_rsa\n")])])]),s("ul",[s("li",[s("code",[t._v("Host")]),t._v(" 这里是个别名可以随便命名")]),t._v(" "),s("li",[s("code",[t._v("HostName")]),t._v(" 一般是网站如："),s("code",[t._v("git@ss.github.com:username/repo.git")]),t._v(" 填写 "),s("code",[t._v("github.com")])]),t._v(" "),s("li",[s("code",[t._v("User")]),t._v(" 通常填写"),s("code",[t._v("git")])]),t._v(" "),s("li",[s("code",[t._v("IdentityFile")]),t._v(" 使用的公钥文件地址")])]),t._v(" "),s("p",[s("strong",[t._v("4.测试")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-T")]),t._v(" git@jslite.github.com  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `@`后面跟上定义的Host  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-T")]),t._v(" work.github.com        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过别名测试")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" ~/公钥文件地址 Host别名  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如 ssh -i ~/.ssh/work_rsa work.github.com")]),t._v("\n")])])]),s("p",[s("strong",[t._v("5.使用")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 原来的写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jslite的用户名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/learngit.git\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 现在的写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@jslite.github.com:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jslite的用户名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/learngit.git\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@work.github.com:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("work的用户名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/learngit.git\n")])])]),s("p",[s("strong",[t._v("5.注意")])]),t._v(" "),s("p",[t._v("如果你修改了id_rsa的名字，你需要将ssh key添加到SSH agent中，如：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("ssh-add ~/.ssh/jslite_rsa\nssh-add "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有的key")]),t._v("\nssh-add "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除所有的key")]),t._v("\nssh-add "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v("  ~/.ssh/jslite_rsa "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除指定的key")]),t._v("\n")])])]),s("h3",{attrs:{id:"免密码登录远程服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#免密码登录远程服务器"}},[t._v("#")]),t._v(" 免密码登录远程服务器")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ ssh-keygen "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" rsa "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-P")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" ~/.ssh/aliyunserver.key\n$ ssh-copy-id "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" ~/.ssh/aliyunserver.key.pub root@192.168.182.112 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里需要输入密码一次")]),t._v("\n")])])]),s("p",[t._v("编辑 "),s("code",[t._v("~/.ssh/config")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Host aliyun1\n  HostName "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".182.112\n  User root\n  PreferredAuthentications publickey\n  IdentityFile ~/.ssh/aliyunserver.key\n")])])]),s("p",[t._v("上面配置完了，可以通过命令登录，不需要输入IP地址和密码 "),s("code",[t._v("ssh aliyun1")])]),t._v(" "),s("h3",{attrs:{id:"https协议下提交代码免密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https协议下提交代码免密码"}},[t._v("#")]),t._v(" https协议下提交代码免密码")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/username/rep.git\n")])])]),s("p",[t._v("通过上面方式克隆可能需要密码，解决办法：进入当前克隆的项目 "),s("code",[t._v("vi rep/.git/config")]),t._v(" 编辑 "),s("code",[t._v("config")]),t._v(", 按照下面方式修改，你就可以提交代码不用输入密码了。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("core"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\trepositoryformatversion "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\tfilemode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\tbare "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\tlogallrefupdates "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\tignorecase "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\tprecomposeunicode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"origin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n-\turl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" https://github.com/username/rep.git\n+\turl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" https://用户名:密码@github.com/username/rep.git\n\tfetch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" +refs/heads/*:refs/remotes/origin/*\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("branch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tremote "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" origin\n\tmerge "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" refs/heads/master\n")])])]),s("h3",{attrs:{id:"文件推向3个git库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件推向3个git库"}},[t._v("#")]),t._v(" 文件推向3个git库")]),t._v(" "),s("p",[s("strong",[t._v("1. 增加3个远程库地址")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://github.com/JSLite/JSLite.git  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--add")]),t._v(" origin https://gitlab.com/wang/JSLite.js.git  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--add")]),t._v(" origin https://oschina.net/wang/JSLite.js.git  \n")])])]),s("p",[s("strong",[t._v("2. 删除其中一个 set-url 地址")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("usage: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("newurl"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oldurl"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   or: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("newurl"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   or: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("code",[t._v("git remote set-url --delete origin https://oschina.net/wang/JSLite.js.git")])]),t._v(" "),s("p",[s("strong",[t._v("3.推送代码")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" origin master  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制推送  ")]),t._v("\n")])])]),s("p",[s("strong",[t._v("4.拉代码")])]),t._v(" "),s("p",[t._v("只能拉取 "),s("code",[t._v("origin")]),t._v(" 里的一个url地址，这个fetch-url"),s("br"),t._v("\n默认为你添加的到 "),s("code",[t._v("origin")]),t._v("的第一个地址")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master   \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--all")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取远程所有内容包括tag  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin next:master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取回origin主机的next分支，与本地的master分支合并  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin next "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程分支是与当前分支合并  ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面一条命令等同于下面两条命令   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/next  \n")])])]),s("p",[t._v("如果远程主机删除了某个分支，默认情况下，git pull 不会在拉取远程分支的时候，删除对应的本地分支。这是为了防止，由于其他人操作了远程主机，导致git pull不知不觉删除了本地分支。"),s("br"),t._v("\n但是，你可以改变这个行为，加上参数 -p 就会在本地删除远程已经删除的分支。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同于下面的命令")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--prune")]),t._v(" origin \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v("\n")])])]),s("p",[s("strong",[t._v("5.更改pull")])]),t._v(" "),s("p",[t._v("只需要更改config文件里，那三个url的顺序即可，fetch-url会直接对应排行第一的那个utl连接。")]),t._v(" "),s("h3",{attrs:{id:"修改远程仓库地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改远程仓库地址"}},[t._v("#")]),t._v(" 修改远程仓库地址")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote remove origin  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除该远程路径  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@jslite.github.com:JSLite/JSLite.git  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加远程路径 ")]),t._v("\n")])])]),s("h3",{attrs:{id:"撤销远程记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销远程记录"}},[t._v("#")]),t._v(" 撤销远程记录")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" HEAD~1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销一条记录   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" origin HEAD:master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同步到远程仓库  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"放弃本地的文件修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#放弃本地的文件修改"}},[t._v("#")]),t._v(" 放弃本地的文件修改")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" FETCH_HEAD "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# FETCH_HEAD表示上一次成功git pull之后形成的commit点。然后git pull")]),t._v("\n")])])]),s("p",[s("code",[t._v("git reset --hard FETCH_HEAD")]),t._v(" 出现错误")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\nYou are not currently on a branch, so I cannot use any\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'branch.<branchname>.merge'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" your configuration file.\nPlease specify "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" remote branch you want to use on the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\nline and try again "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e.g. "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git pull <repository> <refspec>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\nSee git-pull"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" FOR details.\n")])])]),s("p",[t._v("解决方法：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建+切换到temp分支 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n")])])]),s("h3",{attrs:{id:"最简单放弃本地修改内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最简单放弃本地修改内容"}},[t._v("#")]),t._v(" 最简单放弃本地修改内容")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果有的修改以及加入暂存区的话")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 还原所有修改，不会删除新增的文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面命令会删除新增的文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clean "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-xdf")]),t._v("\n")])])]),s("p",[t._v("通过存储暂存区stash，在删除暂存区的方法放弃本地修改。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop \n")])])]),s("h3",{attrs:{id:"回滚到某个commit提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回滚到某个commit提交"}},[t._v("#")]),t._v(" 回滚到某个commit提交")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert HEAD~1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销一条记录 会弹出 commit 编辑")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交回滚")]),t._v("\n")])])]),s("h3",{attrs:{id:"回退到某一个版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回退到某一个版本"}},[t._v("#")]),t._v(" 回退到某一个版本")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("hash"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 例如 git reset --hard a3hd73r")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --hard代表丢弃工作区的修改，让工作区与版本代码一模一样，与之对应，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --soft参数代表保留工作区的修改。")]),t._v("\n")])])]),s("h3",{attrs:{id:"去掉某个commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#去掉某个commit"}},[t._v("#")]),t._v(" 去掉某个commit")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实质是新建了一个与原来完全相反的commit，抵消了原来commit的效果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-hash"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),s("h3",{attrs:{id:"新建一个空分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新建一个空分支"}},[t._v("#")]),t._v(" 新建一个空分支")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这种方式新建的分支(gh-pages)是没有 commit 记录的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--orphan")]),t._v(" gh-pages\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除新建的gh-pages分支原本的内容，如果不删除，提交将作为当前分支的第一个commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看一下状态 有可能上面一条命令，没有删除还没有提交的的文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" state \n")])])]),s("h3",{attrs:{id:"合并多个commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并多个commit"}},[t._v("#")]),t._v(" 合并多个commit")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个命令，将最近4个commit合并为1个，HEAD代表当前版本。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将进入VIM界面，你可以修改提交信息。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" HEAD~4 \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以看到其中分为两个部分，上方未注释的部分是填写要执行的指令，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 而下方注释的部分则是指令的提示说明。指令部分中由前方的命令名称、commit hash 和 commit message 组成")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前我们只要知道 pick 和 squash 这两个命令即可。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --\x3e pick 的意思是要会执行这个 commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --\x3e squash 的意思是这个 commit 会被合并到前一个commit")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 我们将 需要保留的 这个 commit 前方的命令改成 squash 或 s，然后输入:wq以保存并退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这是我们会看到 commit message 的编辑界面")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其中, 非注释部分就是两次的 commit message, 你要做的就是将这两个修改成新的 commit message。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入wq保存并推出, 再次输入git log查看 commit 历史信息，你会发现这两个 commit 已经合并了。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将修改强制推送到前端")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" origin master\n")])])]),s("h3",{attrs:{id:"修改远程commit记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改远程commit记录"}},[t._v("#")]),t._v(" 修改远程Commit记录")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--amend")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# amend只能修改没有提交到线上的，最后一次commit记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" HEAD~3\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示要修改当前版本的倒数第三次状态")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将要更改的记录行首单词 pick 改为 edit")]),t._v("\npick 96dc3f9 doc: Update quick-start.md\npick f1cce8a test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Transition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":Add transition "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#47)")]),t._v("\npick "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6293516")]),t._v(" feat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Divider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": Add Divider component.\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase eeb03a4..6293516 onto eeb03a4 (3 commands)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commands:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# p, pick = use commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# r, reword = use commit, but edit the commit message")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e, edit = use commit, but stop for amending")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# s, squash = use commit, but meld into previous commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# f, fixup = like "squash", but discard this commit\'s log message')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# x, exec = run command (the rest of the line) using shell")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# d, drop = remove commit")]),t._v("\n")])])]),s("p",[t._v("保存并退出，会弹出下面提示")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can amend the commit now, with")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   git commit --amend")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Once you are satisfied with your changes, run")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   git rebase --continue")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通过这条命令进入编辑页面更改commit，保存退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--amend")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存退出确认修改，继续执行 rebase, ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--continue")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果修改多条记录反复执行上面两条命令直到完成所有修改")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最后，确保别人没有提交进行push，最好不要加 -f 强制推送")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" origin master\n")])])]),s("h3",{attrs:{id:"添加忽略文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加忽略文件"}},[t._v("#")]),t._v(" 添加忽略文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" node_modules/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" .gitignore\n")])])]),s("h3",{attrs:{id:"利用commit关闭一个issue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用commit关闭一个issue"}},[t._v("#")]),t._v(" 利用commit关闭一个issue")]),t._v(" "),s("p",[t._v("这个功能在Github上可以玩儿，Gitlab上特别老的版本不能玩儿哦，那么如何跟随着commit关闭一个issue呢? 在confirm merge的时候可以使用一下命令来关闭相关issue:")]),t._v(" "),s("p",[s("code",[t._v("fixes #xxx")]),t._v("、 "),s("code",[t._v("fixed #xxx")]),t._v("、 "),s("code",[t._v("fix #xxx")]),t._v("、 "),s("code",[t._v("closes #xxx")]),t._v("、 "),s("code",[t._v("close #xxx")]),t._v("、 "),s("code",[t._v("closed #xxx")]),t._v("、")]),t._v(" "),s("h3",{attrs:{id:"同步fork的上游仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步fork的上游仓库"}},[t._v("#")]),t._v(" 同步fork的上游仓库")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://help.github.com/articles/syncing-a-fork/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github教程同步fork教程"),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"http://www.miss77.net/549.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("在Github上同步一个分支(fork)"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("strong",[t._v("设置添加多个远程仓库地址。")])]),t._v(" "),s("p",[t._v("在同步之前，需要创建一个远程点指向上游仓库(repo).如果你已经派生了一个原始仓库，可以按照如下方法做。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List the current remotes （列出当前远程仓库）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# origin  https://github.com/user/repo.git (fetch)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# origin  https://github.com/user/repo.git (push)")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" upstream https://github.com/otheruser/repo.git\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set a new remote (设置一个新的远程仓库)")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Verify new remote (验证新的原唱仓库)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# origin    https://github.com/user/repo.git (fetch)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# origin    https://github.com/user/repo.git (push)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# upstream  https://github.com/otheruser/repo.git (fetch)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# upstream  https://github.com/otheruser/repo.git (push)")]),t._v("\n")])])]),s("p",[s("strong",[t._v("同步更新仓库内容")])]),t._v(" "),s("p",[t._v("同步上游仓库到你的仓库需要执行两步：首先你需要从远程拉去，之后你需要合并你希望的分支到你的本地副本分支。从上游的存储库中提取分支以及各自的提交内容。 "),s("code",[t._v("master")]),t._v(" 将被存储在本地分支机构 "),s("code",[t._v("upstream/master")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch upstream\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remote: Counting objects: 75, done.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remote: Compressing objects: 100% (53/53), done.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remote: Total 62 (delta 27), reused 44 (delta 9)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Unpacking objects: 100% (62/62), done.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# From https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  * [new branch]      master     -> upstream/master")]),t._v("\n")])])]),s("p",[t._v("检查你的 fork's 本地 "),s("code",[t._v("master")]),t._v(" 分支")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Switched to branch 'master'")]),t._v("\n")])])]),s("p",[t._v("合并来自 "),s("code",[t._v("upstream/master")]),t._v(" 的更改到本地 master  分支上。  这使你的前 fork's "),s("code",[t._v("master")]),t._v(" 分支与上游资源库同步，而不会丢失你本地修改。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge upstream/master\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Updating a422352..5fdff0f")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fast-forward")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  README                    |    9 -------")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  README.md                 |    7 ++++++")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  2 files changed, 7 insertions(+), 9 deletions(-)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  delete mode 100644 README")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  create mode 100644 README.md")]),t._v("\n")])])]),s("h3",{attrs:{id:"批量修改历史commit中的名字和邮箱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批量修改历史commit中的名字和邮箱"}},[t._v("#")]),t._v(" 批量修改历史commit中的名字和邮箱")]),t._v(" "),s("p",[s("strong",[t._v("1.克隆仓库")])]),t._v(" "),s("p",[t._v("注意参数，这个不是普通的clone，clone下来的仓库并不能参与开发")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--bare")]),t._v(" https://github.com/user/repo.git\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" repo.git\n")])])]),s("p",[s("strong",[t._v("2.命令行中运行代码")])]),t._v(" "),s("p",[t._v("OLD_EMAIL原来的邮箱"),s("br"),t._v("\nCORRECT_NAME更正的名字"),s("br"),t._v("\nCORRECT_EMAIL更正的邮箱")]),t._v(" "),s("p",[t._v("将下面代码复制放到命令行中执行")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" filter-branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" --env-filter "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'\nOLD_EMAIL="wowohoo@qq.com"\nCORRECT_NAME="小弟调调"\nCORRECT_EMAIL="更正的邮箱@qq.com"\nif [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]\nthen\n    export GIT_COMMITTER_NAME="$CORRECT_NAME"\n    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"\nfi\nif [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]\nthen\n    export GIT_AUTHOR_NAME="$CORRECT_NAME"\n    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"\nfi\n\'')]),t._v(" --tag-name-filter "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" -- "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--branches")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--tags")]),t._v("\n")])])]),s("p",[t._v("执行过程")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("Rewrite 160d4df2689ff6df3820563bfd13b5f1fb9ba832 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("479")]),t._v("/508"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" seconds passed, remaining "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" predicted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nRef "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/heads/dev'")]),t._v(" was rewritten\nRef "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/heads/master'")]),t._v(" was rewritten\n")])])]),s("p",[s("strong",[t._v("3.同步到远程仓库")])]),t._v(" "),s("p",[t._v("同步到push远程git仓库")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--force")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--tags")]),t._v(" origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/heads/*'")]),t._v("\n")])])]),s("p",[t._v("我还遇到了如下面错误，lab默认给master分支加了保护，不允许强制覆盖。"),s("code",[t._v("Project(项目)")]),t._v("->"),s("code",[t._v("Setting")]),t._v("->"),s("code",[t._v("Repository")]),t._v(" 菜单下面的"),s("code",[t._v("Protected branches")]),t._v("把master的保护去掉就可以了。修改完之后，建议把master的保护再加回来，毕竟强推不是件好事。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("remote: GitLab: You are not allowed to force push code to a protected branch on this project.\n")])])]),s("p",[t._v("当上面的push 不上去的时候，先 "),s("code",[t._v("git pull")]),t._v(" 确保最新代码")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull  --allow-unrelated-histories\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者指定分枝")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master --allow-unrelated-histories\n")])])]),s("h3",{attrs:{id:"查看某个文件历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看某个文件历史"}},[t._v("#")]),t._v(" 查看某个文件历史")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline 文件名  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出文件的所有改动历史  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show c178bf49   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 某次的改动的修改记录  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" c178bf49 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 某次的改动的修改记录  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" blame 文件名     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示文件的每一行是在那个版本最后修改。  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" whatchanged 文件名  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示某个文件的每个版本提交信息：提交日期，提交人员，版本号，提交备注（没有修改细节）  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"打造自己的git命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打造自己的git命令"}},[t._v("#")]),t._v(" 打造自己的git命令")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" alias.st status\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" alias.br branch\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" alias.co checkout\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" alias.ci commit\n")])])]),s("p",[t._v("配置好后再输入git命令的时候就不用再输入一大段了，例如我们要查看状态，只需：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" st\n")])])]),s("h3",{attrs:{id:"中文乱码的解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中文乱码的解决方案"}},[t._v("#")]),t._v(" 中文乱码的解决方案")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" core.quotepath "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("h2",{attrs:{id:"新建仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新建仓库"}},[t._v("#")]),t._v(" 新建仓库")]),t._v(" "),s("h3",{attrs:{id:"init"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[t._v("#")]),t._v(" init")]),t._v(" "),s("p",[s("code",[t._v("git init")]),t._v(" #初始化")]),t._v(" "),s("h3",{attrs:{id:"status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[t._v("#")]),t._v(" status")]),t._v(" "),s("p",[s("code",[t._v("git status")]),t._v(" #获取状态")]),t._v(" "),s("h3",{attrs:{id:"add"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[t._v("#")]),t._v(" add")]),t._v(" "),s("p",[s("code",[t._v("git add file")]),t._v(" # .或*代表全部添加"),s("br"),t._v(" "),s("code",[t._v("git rm --cached <added_file_to_undo>")]),t._v(" # 在commit之前撤销git add操作"),s("br"),t._v(" "),s("code",[t._v("git reset head")]),t._v(" # 好像比上面"),s("code",[t._v("git rm --cached")]),t._v("更方便")]),t._v(" "),s("h3",{attrs:{id:"commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[t._v("#")]),t._v(" commit")]),t._v(" "),s("p",[s("code",[t._v('git commit -m "message"')]),t._v(" #此处注意乱码")]),t._v(" "),s("h3",{attrs:{id:"remote"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remote"}},[t._v("#")]),t._v(" remote")]),t._v(" "),s("p",[s("code",[t._v("git remote add origin git@github.com:JSLite/test.git")]),t._v(" #添加源")]),t._v(" "),s("h3",{attrs:{id:"push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[t._v("#")]),t._v(" push")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# push同事设置默认跟踪分支  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制推送文件，缩写 -f（全写--force）")]),t._v("\n")])])]),s("h2",{attrs:{id:"clone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clone"}},[t._v("#")]),t._v(" clone")]),t._v(" "),s("p",[s("code",[t._v("git clone git://github.com/JSLite/JSLite.js.git")]),s("br"),t._v(" "),s("code",[t._v("git clone git://github.com/JSLite/JSLite.js.git mypro")]),t._v(" #克隆到自定义文件夹"),s("br"),t._v(" "),s("code",[t._v("git clone [user@]example.com:path/to/repo.git/")]),t._v(" #SSH协议还有另一种写法。")]),t._v(" "),s("p",[t._v("git clone支持多种协议，除了HTTP(s)以外，还支持SSH、Git、本地文件协议等，下面是一些例子。"),s("code",[t._v("git clone <版本库的网址> <本地目录名>")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("://example.com/path/to/repo.git/\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone ssh://example.com/path/to/repo.git/\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git://example.com/path/to/repo.git/\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone /opt/git/project.git \n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone file:///opt/git/project.git\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone ftp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("://example.com/path/to/repo.git/\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone rsync://example.com/path/to/repo.git/\n")])])]),s("h2",{attrs:{id:"本地"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地"}},[t._v("#")]),t._v(" 本地")]),t._v(" "),s("h3",{attrs:{id:"help"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#help"}},[t._v("#")]),t._v(" help")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取帮助信息  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"add-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-2"}},[t._v("#")]),t._v(" add")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" *   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 跟踪新文件   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加[指定路径下]已跟踪文件   ")]),t._v("\n")])])]),s("h3",{attrs:{id:"rm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[t._v("#")]),t._v(" rm")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" *"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" *          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移除文件  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" *            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 移除文件  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cached")]),t._v(" *      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消跟踪  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" file_from file_to  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重命名跟踪文件  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看提交记录  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"commit-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commit-2"}},[t._v("#")]),t._v(" commit")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#提交更新   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#提交说明   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#跳过使用暂存区域，把所有已经跟踪过的文件暂存起来一并提交   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--amend")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改最后一次提交   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit log "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看所有提交，包括没有push的commit    ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#133"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#关联issue 任意位置带上# 符号加上issue号码  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fix #133"')]),t._v(" commit关闭issue  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'概要描述'")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("$'"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v("'")]),t._v("'1.详细描述"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(".详细描述' "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#提交简要描述和详细描述  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" reset")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD *  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消已经暂存的文件   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--mixed")]),t._v(" HEAD * "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同上   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--soft")]),t._v(" HEAD *  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置到指定状态，不会修改索引区和工作树   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" HEAD *  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置到指定状态，会修改索引区和工作树   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset -- files *     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重置index区文件   ")]),t._v("\n")])])]),s("h3",{attrs:{id:"revert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#revert"}},[t._v("#")]),t._v(" revert")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert HEAD   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销前一次操作   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert HEAD~  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销前前一次操作   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert commit "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销指定操作   ")]),t._v("\n")])])]),s("h3",{attrs:{id:"checkout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#checkout"}},[t._v("#")]),t._v(" checkout")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消对文件的修改（从暂存区——覆盖worktree file）  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("commit -- file_name  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从仓库取出file覆盖当前分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout HEAD~1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将会更新 working directory 去匹配某次 commit   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从暂存区取出文件覆盖工作区   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" gh-pages  0c304c9  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个表示 从当前分支 commit 哈希值为 0c304c9 的节点，分一个新的分支gh-pages出来，并切换到 gh-pages   ")]),t._v("\n")])])]),s("h3",{attrs:{id:"diff"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[t._v("#")]),t._v(" diff")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定文件的差异   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--stat")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看简单的diff结果   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较Worktree和Index之间的差异   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--cached")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较Index和HEAD之间的差异   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较Worktree和HEAD之间的差异   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" branch     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较Worktree和branch之间的差异   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" branch1 branch2  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较两次分支之间的差异   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" commit commit    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较两次提交之间的差异   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("test   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面这条命令只显示两个分支间的差异  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" master"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".test    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你想找出‘master’,‘test’的共有 父分支和'test'分支之间的差异，你用3个‘.'来取代前面的两个'.'  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"stash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stash"}},[t._v("#")]),t._v(" stash")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将工作区现场（已跟踪文件）储藏起来，等以后恢复后继续工作。   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看保存的工作现场   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复工作现场   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除stash内容   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复的同时直接删除stash内容   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply stash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 恢复指定的工作现场，当你保存了不只一份工作现场时。   ")]),t._v("\n")])])]),s("h3",{attrs:{id:"merge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[t._v("#")]),t._v(" merge")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--squash")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并压缩，将test上的commit压缩为一条   ")]),t._v("\n")])])]),s("h3",{attrs:{id:"cherry-pick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick"}},[t._v("#")]),t._v(" cherry-pick")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick commit    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拣选合并，将commit合并到当前分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拣选多个提交，合并完后可以继续拣选下一个提交   ")]),t._v("\n")])])]),s("h3",{attrs:{id:"rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase"}},[t._v("#")]),t._v(" rebase")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase master   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将master分之上超前的提交，变基到当前分支  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--onto")]),t._v(" master 169a6  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 限制回滚范围，rebase当前分支从169a6以后的提交  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--interactive")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 交互模式，修改commit   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--continue")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 处理完冲突继续合并   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--skip")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 跳过   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--abort")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消合并    ")]),t._v("\n")])])]),s("h2",{attrs:{id:"分支branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支branch"}},[t._v("#")]),t._v(" 分支branch")]),t._v(" "),s("h3",{attrs:{id:"删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :branchName  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程分支  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--delete")]),t._v(" new "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程分支new   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" branchName     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地分支，强制删除用-D  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地test分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制删除本地test分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote prune origin "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 远程删除了，本地还能看到远程存在，这条命令删除远程不存在的分支")]),t._v("\n")])])]),s("h3",{attrs:{id:"提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交"}},[t._v("#")]),t._v(" 提交")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" origin branchName "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交分支到远程origin主机中  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"拉取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取"}},[t._v("#")]),t._v(" 拉取")]),t._v(" "),s("p",[s("code",[t._v("git fetch -p")]),t._v(" #拉取远程分支时，自动清理 远程分支已删除，本地还存在的对应同名分支。")]),t._v(" "),s("h3",{attrs:{id:"分支合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支合并"}},[t._v("#")]),t._v(" 分支合并")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge branchName      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并分支 - 将分支branchName和当前所在分支合并   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/master   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在本地分支上合并远程分支。   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase origin/master  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在本地分支上合并远程分支。   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将test分支合并到当前分支   ")]),t._v("\n")])])]),s("h3",{attrs:{id:"重命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重命名"}},[t._v("#")]),t._v(" 重命名")]),t._v(" "),s("p",[s("code",[t._v("git branch -m old new")]),t._v(" #重命名分支")]),t._v(" "),s("h3",{attrs:{id:"查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看"}},[t._v("#")]),t._v(" 查看")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出本地分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出远端分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看各个分支最后一个提交对象的信息   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--merge")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已经合并到当前分支的分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --no-merge   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看为合并到当前分支的分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show origin  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以查看remote地址，远程分支")]),t._v("\n")])])]),s("h3",{attrs:{id:"新建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新建"}},[t._v("#")]),t._v(" 新建")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建test分支  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch newBrach 3defc69 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定哈希3defc69，新建分支名字为newBrach")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" newBrach origin/master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取回远程主机的更新以后，在它的基础上创建一个新的分支  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" newBrach 3defc69 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以哈希值3defc69，新建 newBrach 分支，并切换到该分支")]),t._v("\n")])])]),s("h3",{attrs:{id:"连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[t._v("#")]),t._v(" 连接")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream dev origin/dev     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地dev分支与远程dev分支之间建立链接  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream master origin/next "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 手动建立追踪关系  ")]),t._v("\n")])])]),s("h3",{attrs:{id:"分支切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支切换"}},[t._v("#")]),t._v(" 分支切换")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到test分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建+切换到test分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" dev "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于dev新建test分支，并切换   ")]),t._v("\n")])])]),s("h2",{attrs:{id:"远端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远端"}},[t._v("#")]),t._v(" 远端")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程主机名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("分支名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fetch取回所有分支（branch）的更新  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin remotebranch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":localbranch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  从远端拉去分支[到本地指定分支]   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/branch   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并远端上指定分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin remotebranch:localbranch  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  拉去远端分支到本地分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin branch    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将当前分支，推送到远端上指定分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin localbranch:remotebranch  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送本地指定分支，到远端上指定分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :remotebranch   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远端指定分支   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--track"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" origin/dev "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于远端dev分支，新建本地test分支[同时设置跟踪]  ")]),t._v("\n")])])]),s("h2",{attrs:{id:"submodule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submodule"}},[t._v("#")]),t._v(" submodule")]),t._v(" "),s("p",[t._v("克隆项目同时克隆submodule")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/jaywcjlove/handbook.git "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--depth")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" --recurse-submodules\n")])])]),s("p",[t._v("克隆项目，之后再手动克隆 submodule 子项目")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--force")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'仓库地址'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'路径'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其中，仓库地址是指子模块仓库地址，路径指将子模块放置在当前工程下的路径。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意：路径不能以 / 结尾（会造成修改不生效）、不能是现有工程已有的目录（不能順利 Clone）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule init "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化submodule")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新submodule(必须在根目录执行命令)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--init")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--recursive")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载的工程带有submodule")]),t._v("\n")])])]),s("p",[t._v("当使用"),s("code",[t._v("git clone")]),t._v("下来的工程中带有submodule时，初始的时候，submodule的内容并不会自动下载下来的，此时，只需执行如下命令：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule foreach "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# submodule 里有其他的 submodule 一次更新")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule foreach "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# submodule更新")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule foreach "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--recursive")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule foreach "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--recursive")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update\n")])])]),s("h2",{attrs:{id:"删除文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[t._v("#")]),t._v(" 删除文件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" node_modules/\n")])])]),s("h2",{attrs:{id:"remote-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remote-2"}},[t._v("#")]),t._v(" remote")]),t._v(" "),s("p",[t._v("git是一个分布式代码管理工具，所以可以支持多个仓库，在git里，服务器上的仓库在本地称之为remote。个人开发时，多源用的可能不多，但多源其实非常有用。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin1 git@github.com:yanhaijing/data.js.git  \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示全部源  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示全部源+详细信息  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),t._v(" origin1 origin2 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重命名  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" origin    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show origin  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定源的全部信息  ")]),t._v("\n")])])]),s("h2",{attrs:{id:"标签tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标签tag"}},[t._v("#")]),t._v(" 标签tag")]),t._v(" "),s("p",[t._v("当开发到一定阶段时，给程序打标签是非常棒的功能。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" v0.1 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my version 1.4'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建带注释标签   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--tags")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一次性推送所有分支 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin v1.5                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送单个tag到orgin源上 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" v1.4.2.1                 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 验证标签，验证已经签署的标签")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show v1.5                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 看到对应的 GPG 签")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出现有标签   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v0gi.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建标签   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout tagname   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到标签       ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" v0.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除标签   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :refs/tags/v0.1 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程标签   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--all")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取远程所有内容包括tag  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" --git-dir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<绝对地址>/.git'")]),t._v(" describe "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--tags")]),t._v(" HEAD "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看本地版本信息  ")]),t._v("\n")])])]),s("h2",{attrs:{id:"日志log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志log"}},[t._v("#")]),t._v(" 日志log")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config format.pretty oneline  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示历史记录时，每个提交的信息只显示一行   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config color.ui "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#彩色的 git 输出   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看最近的提交日志   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单行显示提交日志   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--graph")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline --abbrev-commit   \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-num")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示第几条log（倒数）   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看所有分支的所有操作记录   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--since")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".day "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一天内的提交；你可以给出各种时间格式，比如说具体的某一天（“2008-01-15”），或者是多久以前（“2 years 1 day 3 minutes ago”）。   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%h - %s"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--author")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("自己的名字 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看自己的日志   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#展开两次更新显示每次提交的内容差异   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--stat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#要快速浏览其他协作者提交的更新都作了哪些改动   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%h - %an, %ar : %s"')]),t._v("#定制要显示的记录格式   \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%h : %s'")]),t._v(" --date-order "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--graph")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拓扑顺序展示   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%h : %s - %ad'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--date")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("short "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#日期YYYY-MM-DD显示   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("last tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" HEAD "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:%s "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只显示commit   ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" format.pretty "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%h : %s - %ad'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--date")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("short "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#日期YYYY-MM-DD显示 写入全局配置")]),t._v("\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("%H")]),t._v(" "),s("td",[t._v("提交对象（commit）的完整哈希字串")]),t._v(" "),s("td",[t._v("%ad")]),t._v(" "),s("td",[t._v("作者修订日期（可以用 -date= 选项定制格式）")])]),t._v(" "),s("tr",[s("td",[t._v("%h")]),t._v(" "),s("td",[t._v("提交对象的简短哈希字串")]),t._v(" "),s("td",[t._v("%ar")]),t._v(" "),s("td",[t._v("作者修订日期，按多久以前的方式显示")])]),t._v(" "),s("tr",[s("td",[t._v("%T")]),t._v(" "),s("td",[t._v("树对象（tree）的完整哈希字串")]),t._v(" "),s("td",[t._v("%cn")]),t._v(" "),s("td",[t._v("提交者(committer)的名字")])]),t._v(" "),s("tr",[s("td",[t._v("%t")]),t._v(" "),s("td",[t._v("树对象的简短哈希字串")]),t._v(" "),s("td",[t._v("%ce")]),t._v(" "),s("td",[t._v("提交者的电子邮件地址")])]),t._v(" "),s("tr",[s("td",[t._v("%P")]),t._v(" "),s("td",[t._v("父对象（parent）的完整哈希字串")]),t._v(" "),s("td",[t._v("%cd")]),t._v(" "),s("td",[t._v("提交日期")])]),t._v(" "),s("tr",[s("td",[t._v("%p")]),t._v(" "),s("td",[t._v("父对象的简短哈希字串")]),t._v(" "),s("td",[t._v("%cr")]),t._v(" "),s("td",[t._v("提交日期，按多久以前的方式显示")])]),t._v(" "),s("tr",[s("td",[t._v("%an")]),t._v(" "),s("td",[t._v("作者（author）的名字")]),t._v(" "),s("td",[t._v("%s")]),t._v(" "),s("td",[t._v("提交说明")])]),t._v(" "),s("tr",[s("td",[t._v("%ae")]),t._v(" "),s("td",[t._v("作者的电子邮件地址")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("-")])])])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://git-scm.com/docs/git-log#_pretty_formats",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pretty Formats"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"重写历史"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重写历史"}},[t._v("#")]),t._v(" 重写历史")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--amend")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 改变最近一次提交  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" HEAD~3  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改最近三次的提交说明，或者其中任意一次  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--amend")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存好了，这些指示很明确地告诉了你该干什么  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--continue")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改提交说明，退出编辑器。  ")]),t._v("\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("pick f7f3f6d changed my name a bit\npick 310154e updated README formatting and added blame\npick a5f4a0d added cat-file\n")])])]),s("p",[t._v("改成")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("pick 310154e updated README formatting and added blame\npick f7f3f6d changed my name a bit\n")])])]),s("h3",{attrs:{id:"删除仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除仓库"}},[t._v("#")]),t._v(" 删除仓库")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("cd ..\nrm -rf repo.git\n")])])]),s("p",[s("a",{attrs:{href:"https://help.github.com/articles/changing-author-info/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github官方教程"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" *  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取命令的帮助信息  ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取当前的状态，非常有用，因为git会提示接下来的能做的操作  ")]),t._v("\n")])])]),s("h2",{attrs:{id:"报错问题解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#报错问题解决"}},[t._v("#")]),t._v(" 报错问题解决")]),t._v(" "),s("p",[s("strong",[t._v("1. "),s("code",[t._v("git fatal: protocol error: bad line length character: No s")])])]),t._v(" "),s("p",[t._v("解决办法：更换remote地址为 "),s("code",[t._v("http/https")]),t._v(" 的")]),t._v(" "),s("p",[s("strong",[t._v("2. "),s("code",[t._v("The requested URL returned error: 403 Forbidden while accessing")])])]),t._v(" "),s("p",[t._v("解决github push错误的办法：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#vim 编辑器打开 当前项目中的config文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" .git/config\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"origin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n    url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" https://github.com/jaywcjlove/example.git  \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#为下面代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("remote "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"origin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n    url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" https://jaywcjlove@github.com/jaywcjlove/example.git  \n")])])]),s("p",[s("strong",[t._v("3. git status 显示中文问题")])]),t._v(" "),s("p",[t._v("在查看状态的时候 git status 如果是中文就显示下面的情况")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("344")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("272")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("247")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("345")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("223")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("201")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("351")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("234")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("346")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("261")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("202")]),t._v("\n")])])]),s("p",[t._v("解决这个问题方法是：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" core.quotepath "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git官网"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://try.github.io",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[t._v("Github 15分钟学习Git")]),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://gitref.org/zh/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git参考手册"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.mceiba.com/tool/git-cheat-sheet.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git简明手册"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Magic"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://gitbook.liuhui998.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Community Book 中文版"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://git-scm.com/book/en/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://marklodato.github.io/visual-git-guide/index-zh-cn.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解Git"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-简明指南"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://pcottle.github.io/learnGitBranching/",target:"_blank",rel:"noopener noreferrer"}},[t._v("learnGitBranching 在线学习工具"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://rogerdudler.github.io/git-guide/index.zh.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("初级教程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000",target:"_blank",rel:"noopener noreferrer"}},[t._v("廖雪峰的Git教程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.worldhello.net/gotgithub/",target:"_blank",rel:"noopener noreferrer"}},[t._v("蒋鑫老师将带你入github的大门"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.open-open.com/lib/view/open1328069609436.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git详解"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://git.oschina.net/progit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("oschina教程"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/blog/2019-how-to-undo-almost-anything-with-git",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to undo (almost) anything with Git撤销一切，汇总各种回滚撤销的场景，加强学习。"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.runoob.com/git/git-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 教程 | 菜鸟教程runoob.com"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://gold.xitu.io/post/5842f9b861ff4b005889ade6",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 本地仓库和裸仓库"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://www.kancloud.cn/kancloud/igit/46710",target:"_blank",rel:"noopener noreferrer"}},[t._v("沉浸式学 Git"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://way.oschina.io/2016/12/15/notes/GitAdvance/?utm_source=gank.io&utm_medium=email",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git进阶用法，主要是rebase高级用法"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);